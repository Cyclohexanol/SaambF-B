### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AggregateCoffee {
  _avg: CoffeeAvgAggregateOutputType
  _count: CoffeeCountAggregateOutputType
  _max: CoffeeMaxAggregateOutputType
  _min: CoffeeMinAggregateOutputType
  _sum: CoffeeSumAggregateOutputType
}

type AggregateCoffeeMachine {
  _avg: CoffeeMachineAvgAggregateOutputType
  _count: CoffeeMachineCountAggregateOutputType
  _max: CoffeeMachineMaxAggregateOutputType
  _min: CoffeeMachineMinAggregateOutputType
  _sum: CoffeeMachineSumAggregateOutputType
}

type AggregateCoffeeRating {
  _avg: CoffeeRatingAvgAggregateOutputType
  _count: CoffeeRatingCountAggregateOutputType
  _max: CoffeeRatingMaxAggregateOutputType
  _min: CoffeeRatingMinAggregateOutputType
  _sum: CoffeeRatingSumAggregateOutputType
}

type AggregateCoffeeType {
  _avg: CoffeeTypeAvgAggregateOutputType
  _count: CoffeeTypeCountAggregateOutputType
  _max: CoffeeTypeMaxAggregateOutputType
  _min: CoffeeTypeMinAggregateOutputType
  _sum: CoffeeTypeSumAggregateOutputType
}

type AggregateComment {
  _avg: CommentAvgAggregateOutputType
  _count: CommentCountAggregateOutputType
  _max: CommentMaxAggregateOutputType
  _min: CommentMinAggregateOutputType
  _sum: CommentSumAggregateOutputType
}

type AggregateDish {
  _avg: DishAvgAggregateOutputType
  _count: DishCountAggregateOutputType
  _max: DishMaxAggregateOutputType
  _min: DishMinAggregateOutputType
  _sum: DishSumAggregateOutputType
}

type AggregateDishComponent {
  _avg: DishComponentAvgAggregateOutputType
  _count: DishComponentCountAggregateOutputType
  _max: DishComponentMaxAggregateOutputType
  _min: DishComponentMinAggregateOutputType
  _sum: DishComponentSumAggregateOutputType
}

type AggregateGuest {
  _avg: GuestAvgAggregateOutputType
  _count: GuestCountAggregateOutputType
  _max: GuestMaxAggregateOutputType
  _min: GuestMinAggregateOutputType
  _sum: GuestSumAggregateOutputType
}

type AggregateMeal {
  _avg: MealAvgAggregateOutputType
  _count: MealCountAggregateOutputType
  _max: MealMaxAggregateOutputType
  _min: MealMinAggregateOutputType
  _sum: MealSumAggregateOutputType
}

type AggregateUser {
  _avg: UserAvgAggregateOutputType
  _count: UserCountAggregateOutputType
  _max: UserMaxAggregateOutputType
  _min: UserMinAggregateOutputType
  _sum: UserSumAggregateOutputType
}

type BatchPayload {
  count: Int!
}

"""BigInt custom scalar type"""
scalar BigInt

type Coffee {
  _count: CoffeeCountOutputType!
  coffeeRatings(cursor: CoffeeRatingWhereUniqueInput, distinct: CoffeeRatingScalarFieldEnum, orderBy: CoffeeRatingOrderByWithRelationInput, skip: Int, take: Int, where: CoffeeRatingWhereInput): [CoffeeRating!]!
  createdAt: DateTime!
  description: String!
  id: Int!
  name: String!
}

type CoffeeAvgAggregateOutputType {
  id: Float
}

input CoffeeAvgOrderByAggregateInput {
  id: SortOrder
}

type CoffeeCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  name: Int!
}

input CoffeeCountOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type CoffeeCountOutputType {
  coffeeRatings: Int!
}

input CoffeeCreateInput {
  coffeeRatings: CoffeeRatingCreateNestedManyWithoutCoffeeInput
  createdAt: DateTime
  description: String!
  name: String!
}

input CoffeeCreateNestedOneWithoutCoffeeRatingsInput {
  connect: CoffeeWhereUniqueInput
  connectOrCreate: CoffeeCreateOrConnectWithoutCoffeeRatingsInput
  create: CoffeeUncheckedCreateWithoutCoffeeRatingsInput
}

input CoffeeCreateOrConnectWithoutCoffeeRatingsInput {
  create: CoffeeUncheckedCreateWithoutCoffeeRatingsInput!
  where: CoffeeWhereUniqueInput!
}

input CoffeeCreateWithoutCoffeeRatingsInput {
  createdAt: DateTime
  description: String!
  name: String!
}

type CoffeeMachine {
  _count: CoffeeMachineCountOutputType!
  coffeeRatings(cursor: CoffeeRatingWhereUniqueInput, distinct: CoffeeRatingScalarFieldEnum, orderBy: CoffeeRatingOrderByWithRelationInput, skip: Int, take: Int, where: CoffeeRatingWhereInput): [CoffeeRating!]!
  createdAt: DateTime!
  description: String!
  id: Int!
  name: String!
}

type CoffeeMachineAvgAggregateOutputType {
  id: Float
}

input CoffeeMachineAvgOrderByAggregateInput {
  id: SortOrder
}

type CoffeeMachineCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  name: Int!
}

input CoffeeMachineCountOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type CoffeeMachineCountOutputType {
  coffeeRatings: Int!
}

input CoffeeMachineCreateInput {
  coffeeRatings: CoffeeRatingCreateNestedManyWithoutMachineInput
  createdAt: DateTime
  description: String!
  name: String!
}

input CoffeeMachineCreateNestedOneWithoutCoffeeRatingsInput {
  connect: CoffeeMachineWhereUniqueInput
  connectOrCreate: CoffeeMachineCreateOrConnectWithoutCoffeeRatingsInput
  create: CoffeeMachineUncheckedCreateWithoutCoffeeRatingsInput
}

input CoffeeMachineCreateOrConnectWithoutCoffeeRatingsInput {
  create: CoffeeMachineUncheckedCreateWithoutCoffeeRatingsInput!
  where: CoffeeMachineWhereUniqueInput!
}

input CoffeeMachineCreateWithoutCoffeeRatingsInput {
  createdAt: DateTime
  description: String!
  name: String!
}

type CoffeeMachineMaxAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  name: String
}

input CoffeeMachineMaxOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type CoffeeMachineMinAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  name: String
}

input CoffeeMachineMinOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input CoffeeMachineOrderByWithAggregationInput {
  _avg: CoffeeMachineAvgOrderByAggregateInput
  _count: CoffeeMachineCountOrderByAggregateInput
  _max: CoffeeMachineMaxOrderByAggregateInput
  _min: CoffeeMachineMinOrderByAggregateInput
  _sum: CoffeeMachineSumOrderByAggregateInput
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input CoffeeMachineOrderByWithRelationInput {
  coffeeRatings: CoffeeRatingOrderByRelationAggregateInput
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input CoffeeMachineRelationFilter {
  is: CoffeeMachineWhereInput
  isNot: CoffeeMachineWhereInput
}

enum CoffeeMachineScalarFieldEnum {
  createdAt
  description
  id
  name
}

input CoffeeMachineScalarWhereWithAggregatesInput {
  AND: [CoffeeMachineScalarWhereWithAggregatesInput]
  NOT: [CoffeeMachineScalarWhereWithAggregatesInput]
  OR: [CoffeeMachineScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
}

type CoffeeMachineSumAggregateOutputType {
  id: Int
}

input CoffeeMachineSumOrderByAggregateInput {
  id: SortOrder
}

input CoffeeMachineUncheckedCreateInput {
  coffeeRatings: CoffeeRatingUncheckedCreateNestedManyWithoutMachineInput
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
}

input CoffeeMachineUncheckedCreateWithoutCoffeeRatingsInput {
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
}

input CoffeeMachineUncheckedUpdateInput {
  coffeeRatings: CoffeeRatingUncheckedUpdateManyWithoutMachineInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeMachineUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeMachineUncheckedUpdateWithoutCoffeeRatingsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeMachineUpdateInput {
  coffeeRatings: CoffeeRatingUpdateManyWithoutMachineInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeMachineUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeMachineUpdateOneWithoutCoffeeRatingsInput {
  connect: CoffeeMachineWhereUniqueInput
  connectOrCreate: CoffeeMachineCreateOrConnectWithoutCoffeeRatingsInput
  create: CoffeeMachineUncheckedCreateWithoutCoffeeRatingsInput
  delete: Boolean
  disconnect: Boolean
  update: CoffeeMachineUncheckedUpdateWithoutCoffeeRatingsInput
  upsert: CoffeeMachineUpsertWithoutCoffeeRatingsInput
}

input CoffeeMachineUpdateWithoutCoffeeRatingsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeMachineUpsertWithoutCoffeeRatingsInput {
  create: CoffeeMachineUncheckedCreateWithoutCoffeeRatingsInput!
  update: CoffeeMachineUncheckedUpdateWithoutCoffeeRatingsInput!
}

input CoffeeMachineWhereInput {
  AND: [CoffeeMachineWhereInput]
  NOT: [CoffeeMachineWhereInput]
  OR: [CoffeeMachineWhereInput]
  coffeeRatings: CoffeeRatingListRelationFilter
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  name: StringFilter
}

input CoffeeMachineWhereUniqueInput {
  id: Int
}

type CoffeeMaxAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  name: String
}

input CoffeeMaxOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type CoffeeMinAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  name: String
}

input CoffeeMinOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input CoffeeOrderByWithAggregationInput {
  _avg: CoffeeAvgOrderByAggregateInput
  _count: CoffeeCountOrderByAggregateInput
  _max: CoffeeMaxOrderByAggregateInput
  _min: CoffeeMinOrderByAggregateInput
  _sum: CoffeeSumOrderByAggregateInput
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input CoffeeOrderByWithRelationInput {
  coffeeRatings: CoffeeRatingOrderByRelationAggregateInput
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type CoffeeRating {
  coffee: Coffee!
  coffeeId: Int!
  coffeeType: CoffeeType
  coffeeTypeId: Int
  createdAt: DateTime!
  guest: Guest
  guestId: Int
  id: Int!
  machine: CoffeeMachine
  machineId: Int
  rating: Int!
}

type CoffeeRatingAvgAggregateOutputType {
  coffeeId: Float
  coffeeTypeId: Float
  guestId: Float
  id: Float
  machineId: Float
  rating: Float
}

input CoffeeRatingAvgOrderByAggregateInput {
  coffeeId: SortOrder
  coffeeTypeId: SortOrder
  guestId: SortOrder
  id: SortOrder
  machineId: SortOrder
  rating: SortOrder
}

type CoffeeRatingCountAggregateOutputType {
  _all: Int!
  coffeeId: Int!
  coffeeTypeId: Int!
  createdAt: Int!
  guestId: Int!
  id: Int!
  machineId: Int!
  rating: Int!
}

input CoffeeRatingCountOrderByAggregateInput {
  coffeeId: SortOrder
  coffeeTypeId: SortOrder
  createdAt: SortOrder
  guestId: SortOrder
  id: SortOrder
  machineId: SortOrder
  rating: SortOrder
}

input CoffeeRatingCreateInput {
  coffee: CoffeeCreateNestedOneWithoutCoffeeRatingsInput!
  coffeeType: CoffeeTypeCreateNestedOneWithoutCoffeeRatingsInput
  createdAt: DateTime
  guest: GuestCreateNestedOneWithoutCoffeeRatingsInput
  machine: CoffeeMachineCreateNestedOneWithoutCoffeeRatingsInput
  rating: Int!
}

input CoffeeRatingCreateNestedManyWithoutCoffeeInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutCoffeeInput]
  create: [CoffeeRatingCreateWithoutCoffeeInput]
}

input CoffeeRatingCreateNestedManyWithoutCoffeeTypeInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutCoffeeTypeInput]
  create: [CoffeeRatingCreateWithoutCoffeeTypeInput]
}

input CoffeeRatingCreateNestedManyWithoutGuestInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutGuestInput]
  create: [CoffeeRatingCreateWithoutGuestInput]
}

input CoffeeRatingCreateNestedManyWithoutMachineInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutMachineInput]
  create: [CoffeeRatingCreateWithoutMachineInput]
}

input CoffeeRatingCreateOrConnectWithoutCoffeeInput {
  create: CoffeeRatingUncheckedCreateWithoutCoffeeInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingCreateOrConnectWithoutCoffeeTypeInput {
  create: CoffeeRatingUncheckedCreateWithoutCoffeeTypeInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingCreateOrConnectWithoutGuestInput {
  create: CoffeeRatingUncheckedCreateWithoutGuestInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingCreateOrConnectWithoutMachineInput {
  create: CoffeeRatingUncheckedCreateWithoutMachineInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingCreateWithoutCoffeeInput {
  coffeeType: CoffeeTypeCreateNestedOneWithoutCoffeeRatingsInput
  createdAt: DateTime
  guest: GuestCreateNestedOneWithoutCoffeeRatingsInput
  machine: CoffeeMachineCreateNestedOneWithoutCoffeeRatingsInput
  rating: Int!
}

input CoffeeRatingCreateWithoutCoffeeTypeInput {
  coffee: CoffeeCreateNestedOneWithoutCoffeeRatingsInput!
  createdAt: DateTime
  guest: GuestCreateNestedOneWithoutCoffeeRatingsInput
  machine: CoffeeMachineCreateNestedOneWithoutCoffeeRatingsInput
  rating: Int!
}

input CoffeeRatingCreateWithoutGuestInput {
  coffee: CoffeeCreateNestedOneWithoutCoffeeRatingsInput!
  coffeeType: CoffeeTypeCreateNestedOneWithoutCoffeeRatingsInput
  createdAt: DateTime
  machine: CoffeeMachineCreateNestedOneWithoutCoffeeRatingsInput
  rating: Int!
}

input CoffeeRatingCreateWithoutMachineInput {
  coffee: CoffeeCreateNestedOneWithoutCoffeeRatingsInput!
  coffeeType: CoffeeTypeCreateNestedOneWithoutCoffeeRatingsInput
  createdAt: DateTime
  guest: GuestCreateNestedOneWithoutCoffeeRatingsInput
  rating: Int!
}

input CoffeeRatingListRelationFilter {
  every: CoffeeRatingWhereInput
  none: CoffeeRatingWhereInput
  some: CoffeeRatingWhereInput
}

type CoffeeRatingMaxAggregateOutputType {
  coffeeId: Int
  coffeeTypeId: Int
  createdAt: DateTime
  guestId: Int
  id: Int
  machineId: Int
  rating: Int
}

input CoffeeRatingMaxOrderByAggregateInput {
  coffeeId: SortOrder
  coffeeTypeId: SortOrder
  createdAt: SortOrder
  guestId: SortOrder
  id: SortOrder
  machineId: SortOrder
  rating: SortOrder
}

type CoffeeRatingMinAggregateOutputType {
  coffeeId: Int
  coffeeTypeId: Int
  createdAt: DateTime
  guestId: Int
  id: Int
  machineId: Int
  rating: Int
}

input CoffeeRatingMinOrderByAggregateInput {
  coffeeId: SortOrder
  coffeeTypeId: SortOrder
  createdAt: SortOrder
  guestId: SortOrder
  id: SortOrder
  machineId: SortOrder
  rating: SortOrder
}

input CoffeeRatingOrderByRelationAggregateInput {
  _count: SortOrder
}

input CoffeeRatingOrderByWithAggregationInput {
  _avg: CoffeeRatingAvgOrderByAggregateInput
  _count: CoffeeRatingCountOrderByAggregateInput
  _max: CoffeeRatingMaxOrderByAggregateInput
  _min: CoffeeRatingMinOrderByAggregateInput
  _sum: CoffeeRatingSumOrderByAggregateInput
  coffeeId: SortOrder
  coffeeTypeId: SortOrder
  createdAt: SortOrder
  guestId: SortOrder
  id: SortOrder
  machineId: SortOrder
  rating: SortOrder
}

input CoffeeRatingOrderByWithRelationInput {
  coffee: CoffeeOrderByWithRelationInput
  coffeeId: SortOrder
  coffeeType: CoffeeTypeOrderByWithRelationInput
  coffeeTypeId: SortOrder
  createdAt: SortOrder
  guest: GuestOrderByWithRelationInput
  guestId: SortOrder
  id: SortOrder
  machine: CoffeeMachineOrderByWithRelationInput
  machineId: SortOrder
  rating: SortOrder
}

enum CoffeeRatingScalarFieldEnum {
  coffeeId
  coffeeTypeId
  createdAt
  guestId
  id
  machineId
  rating
}

input CoffeeRatingScalarWhereInput {
  AND: [CoffeeRatingScalarWhereInput]
  NOT: [CoffeeRatingScalarWhereInput]
  OR: [CoffeeRatingScalarWhereInput]
  coffeeId: IntFilter
  coffeeTypeId: IntNullableFilter
  createdAt: DateTimeFilter
  guestId: IntNullableFilter
  id: IntFilter
  machineId: IntNullableFilter
  rating: IntFilter
}

input CoffeeRatingScalarWhereWithAggregatesInput {
  AND: [CoffeeRatingScalarWhereWithAggregatesInput]
  NOT: [CoffeeRatingScalarWhereWithAggregatesInput]
  OR: [CoffeeRatingScalarWhereWithAggregatesInput]
  coffeeId: IntWithAggregatesFilter
  coffeeTypeId: IntNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  guestId: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  machineId: IntNullableWithAggregatesFilter
  rating: IntWithAggregatesFilter
}

type CoffeeRatingSumAggregateOutputType {
  coffeeId: Int
  coffeeTypeId: Int
  guestId: Int
  id: Int
  machineId: Int
  rating: Int
}

input CoffeeRatingSumOrderByAggregateInput {
  coffeeId: SortOrder
  coffeeTypeId: SortOrder
  guestId: SortOrder
  id: SortOrder
  machineId: SortOrder
  rating: SortOrder
}

input CoffeeRatingUncheckedCreateInput {
  coffeeId: Int!
  coffeeTypeId: Int
  createdAt: DateTime
  guestId: Int
  id: Int
  machineId: Int
  rating: Int!
}

input CoffeeRatingUncheckedCreateNestedManyWithoutCoffeeInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutCoffeeInput]
  create: [CoffeeRatingCreateWithoutCoffeeInput]
}

input CoffeeRatingUncheckedCreateNestedManyWithoutCoffeeTypeInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutCoffeeTypeInput]
  create: [CoffeeRatingCreateWithoutCoffeeTypeInput]
}

input CoffeeRatingUncheckedCreateNestedManyWithoutGuestInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutGuestInput]
  create: [CoffeeRatingCreateWithoutGuestInput]
}

input CoffeeRatingUncheckedCreateNestedManyWithoutMachineInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutMachineInput]
  create: [CoffeeRatingCreateWithoutMachineInput]
}

input CoffeeRatingUncheckedCreateWithoutCoffeeInput {
  coffeeTypeId: Int
  createdAt: DateTime
  guestId: Int
  id: Int
  machineId: Int
  rating: Int!
}

input CoffeeRatingUncheckedCreateWithoutCoffeeTypeInput {
  coffeeId: Int!
  createdAt: DateTime
  guestId: Int
  id: Int
  machineId: Int
  rating: Int!
}

input CoffeeRatingUncheckedCreateWithoutGuestInput {
  coffeeId: Int!
  coffeeTypeId: Int
  createdAt: DateTime
  id: Int
  machineId: Int
  rating: Int!
}

input CoffeeRatingUncheckedCreateWithoutMachineInput {
  coffeeId: Int!
  coffeeTypeId: Int
  createdAt: DateTime
  guestId: Int
  id: Int
  rating: Int!
}

input CoffeeRatingUncheckedUpdateInput {
  coffeeId: IntFieldUpdateOperationsInput
  coffeeTypeId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guestId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  machineId: NullableIntFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUncheckedUpdateManyInput {
  coffeeId: IntFieldUpdateOperationsInput
  coffeeTypeId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guestId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  machineId: NullableIntFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUncheckedUpdateManyWithoutCoffeeInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutCoffeeInput]
  create: [CoffeeRatingCreateWithoutCoffeeInput]
  delete: [CoffeeRatingWhereUniqueInput]
  deleteMany: [CoffeeRatingScalarWhereInput]
  disconnect: [CoffeeRatingWhereUniqueInput]
  set: [CoffeeRatingWhereUniqueInput]
  update: [CoffeeRatingUpdateWithWhereUniqueWithoutCoffeeInput]
  updateMany: [CoffeeRatingUpdateManyWithWhereWithoutCoffeeInput]
  upsert: [CoffeeRatingUpsertWithWhereUniqueWithoutCoffeeInput]
}

input CoffeeRatingUncheckedUpdateManyWithoutCoffeeRatingsInput {
  coffeeId: IntFieldUpdateOperationsInput
  coffeeTypeId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  machineId: NullableIntFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUncheckedUpdateManyWithoutCoffeeTypeInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutCoffeeTypeInput]
  create: [CoffeeRatingCreateWithoutCoffeeTypeInput]
  delete: [CoffeeRatingWhereUniqueInput]
  deleteMany: [CoffeeRatingScalarWhereInput]
  disconnect: [CoffeeRatingWhereUniqueInput]
  set: [CoffeeRatingWhereUniqueInput]
  update: [CoffeeRatingUpdateWithWhereUniqueWithoutCoffeeTypeInput]
  updateMany: [CoffeeRatingUpdateManyWithWhereWithoutCoffeeTypeInput]
  upsert: [CoffeeRatingUpsertWithWhereUniqueWithoutCoffeeTypeInput]
}

input CoffeeRatingUncheckedUpdateManyWithoutGuestInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutGuestInput]
  create: [CoffeeRatingCreateWithoutGuestInput]
  delete: [CoffeeRatingWhereUniqueInput]
  deleteMany: [CoffeeRatingScalarWhereInput]
  disconnect: [CoffeeRatingWhereUniqueInput]
  set: [CoffeeRatingWhereUniqueInput]
  update: [CoffeeRatingUpdateWithWhereUniqueWithoutGuestInput]
  updateMany: [CoffeeRatingUpdateManyWithWhereWithoutGuestInput]
  upsert: [CoffeeRatingUpsertWithWhereUniqueWithoutGuestInput]
}

input CoffeeRatingUncheckedUpdateManyWithoutMachineInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutMachineInput]
  create: [CoffeeRatingCreateWithoutMachineInput]
  delete: [CoffeeRatingWhereUniqueInput]
  deleteMany: [CoffeeRatingScalarWhereInput]
  disconnect: [CoffeeRatingWhereUniqueInput]
  set: [CoffeeRatingWhereUniqueInput]
  update: [CoffeeRatingUpdateWithWhereUniqueWithoutMachineInput]
  updateMany: [CoffeeRatingUpdateManyWithWhereWithoutMachineInput]
  upsert: [CoffeeRatingUpsertWithWhereUniqueWithoutMachineInput]
}

input CoffeeRatingUncheckedUpdateWithoutCoffeeInput {
  coffeeTypeId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guestId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  machineId: NullableIntFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUncheckedUpdateWithoutCoffeeTypeInput {
  coffeeId: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guestId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  machineId: NullableIntFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUncheckedUpdateWithoutGuestInput {
  coffeeId: IntFieldUpdateOperationsInput
  coffeeTypeId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  machineId: NullableIntFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUncheckedUpdateWithoutMachineInput {
  coffeeId: IntFieldUpdateOperationsInput
  coffeeTypeId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guestId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUpdateInput {
  coffee: CoffeeUpdateOneRequiredWithoutCoffeeRatingsInput
  coffeeType: CoffeeTypeUpdateOneWithoutCoffeeRatingsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guest: GuestUpdateOneWithoutCoffeeRatingsInput
  machine: CoffeeMachineUpdateOneWithoutCoffeeRatingsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUpdateManyWithWhereWithoutCoffeeInput {
  data: CoffeeRatingUncheckedUpdateManyWithoutCoffeeRatingsInput!
  where: CoffeeRatingScalarWhereInput!
}

input CoffeeRatingUpdateManyWithWhereWithoutCoffeeTypeInput {
  data: CoffeeRatingUncheckedUpdateManyWithoutCoffeeRatingsInput!
  where: CoffeeRatingScalarWhereInput!
}

input CoffeeRatingUpdateManyWithWhereWithoutGuestInput {
  data: CoffeeRatingUncheckedUpdateManyWithoutCoffeeRatingsInput!
  where: CoffeeRatingScalarWhereInput!
}

input CoffeeRatingUpdateManyWithWhereWithoutMachineInput {
  data: CoffeeRatingUncheckedUpdateManyWithoutCoffeeRatingsInput!
  where: CoffeeRatingScalarWhereInput!
}

input CoffeeRatingUpdateManyWithoutCoffeeInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutCoffeeInput]
  create: [CoffeeRatingCreateWithoutCoffeeInput]
  delete: [CoffeeRatingWhereUniqueInput]
  deleteMany: [CoffeeRatingScalarWhereInput]
  disconnect: [CoffeeRatingWhereUniqueInput]
  set: [CoffeeRatingWhereUniqueInput]
  update: [CoffeeRatingUpdateWithWhereUniqueWithoutCoffeeInput]
  updateMany: [CoffeeRatingUpdateManyWithWhereWithoutCoffeeInput]
  upsert: [CoffeeRatingUpsertWithWhereUniqueWithoutCoffeeInput]
}

input CoffeeRatingUpdateManyWithoutCoffeeTypeInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutCoffeeTypeInput]
  create: [CoffeeRatingCreateWithoutCoffeeTypeInput]
  delete: [CoffeeRatingWhereUniqueInput]
  deleteMany: [CoffeeRatingScalarWhereInput]
  disconnect: [CoffeeRatingWhereUniqueInput]
  set: [CoffeeRatingWhereUniqueInput]
  update: [CoffeeRatingUpdateWithWhereUniqueWithoutCoffeeTypeInput]
  updateMany: [CoffeeRatingUpdateManyWithWhereWithoutCoffeeTypeInput]
  upsert: [CoffeeRatingUpsertWithWhereUniqueWithoutCoffeeTypeInput]
}

input CoffeeRatingUpdateManyWithoutGuestInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutGuestInput]
  create: [CoffeeRatingCreateWithoutGuestInput]
  delete: [CoffeeRatingWhereUniqueInput]
  deleteMany: [CoffeeRatingScalarWhereInput]
  disconnect: [CoffeeRatingWhereUniqueInput]
  set: [CoffeeRatingWhereUniqueInput]
  update: [CoffeeRatingUpdateWithWhereUniqueWithoutGuestInput]
  updateMany: [CoffeeRatingUpdateManyWithWhereWithoutGuestInput]
  upsert: [CoffeeRatingUpsertWithWhereUniqueWithoutGuestInput]
}

input CoffeeRatingUpdateManyWithoutMachineInput {
  connect: [CoffeeRatingWhereUniqueInput]
  connectOrCreate: [CoffeeRatingCreateOrConnectWithoutMachineInput]
  create: [CoffeeRatingCreateWithoutMachineInput]
  delete: [CoffeeRatingWhereUniqueInput]
  deleteMany: [CoffeeRatingScalarWhereInput]
  disconnect: [CoffeeRatingWhereUniqueInput]
  set: [CoffeeRatingWhereUniqueInput]
  update: [CoffeeRatingUpdateWithWhereUniqueWithoutMachineInput]
  updateMany: [CoffeeRatingUpdateManyWithWhereWithoutMachineInput]
  upsert: [CoffeeRatingUpsertWithWhereUniqueWithoutMachineInput]
}

input CoffeeRatingUpdateWithWhereUniqueWithoutCoffeeInput {
  data: CoffeeRatingUncheckedUpdateWithoutCoffeeInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingUpdateWithWhereUniqueWithoutCoffeeTypeInput {
  data: CoffeeRatingUncheckedUpdateWithoutCoffeeTypeInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingUpdateWithWhereUniqueWithoutGuestInput {
  data: CoffeeRatingUncheckedUpdateWithoutGuestInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingUpdateWithWhereUniqueWithoutMachineInput {
  data: CoffeeRatingUncheckedUpdateWithoutMachineInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingUpdateWithoutCoffeeInput {
  coffeeType: CoffeeTypeUpdateOneWithoutCoffeeRatingsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guest: GuestUpdateOneWithoutCoffeeRatingsInput
  machine: CoffeeMachineUpdateOneWithoutCoffeeRatingsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUpdateWithoutCoffeeTypeInput {
  coffee: CoffeeUpdateOneRequiredWithoutCoffeeRatingsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guest: GuestUpdateOneWithoutCoffeeRatingsInput
  machine: CoffeeMachineUpdateOneWithoutCoffeeRatingsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUpdateWithoutGuestInput {
  coffee: CoffeeUpdateOneRequiredWithoutCoffeeRatingsInput
  coffeeType: CoffeeTypeUpdateOneWithoutCoffeeRatingsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  machine: CoffeeMachineUpdateOneWithoutCoffeeRatingsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUpdateWithoutMachineInput {
  coffee: CoffeeUpdateOneRequiredWithoutCoffeeRatingsInput
  coffeeType: CoffeeTypeUpdateOneWithoutCoffeeRatingsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guest: GuestUpdateOneWithoutCoffeeRatingsInput
  rating: IntFieldUpdateOperationsInput
}

input CoffeeRatingUpsertWithWhereUniqueWithoutCoffeeInput {
  create: CoffeeRatingUncheckedCreateWithoutCoffeeInput!
  update: CoffeeRatingUncheckedUpdateWithoutCoffeeInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingUpsertWithWhereUniqueWithoutCoffeeTypeInput {
  create: CoffeeRatingUncheckedCreateWithoutCoffeeTypeInput!
  update: CoffeeRatingUncheckedUpdateWithoutCoffeeTypeInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingUpsertWithWhereUniqueWithoutGuestInput {
  create: CoffeeRatingUncheckedCreateWithoutGuestInput!
  update: CoffeeRatingUncheckedUpdateWithoutGuestInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingUpsertWithWhereUniqueWithoutMachineInput {
  create: CoffeeRatingUncheckedCreateWithoutMachineInput!
  update: CoffeeRatingUncheckedUpdateWithoutMachineInput!
  where: CoffeeRatingWhereUniqueInput!
}

input CoffeeRatingWhereInput {
  AND: [CoffeeRatingWhereInput]
  NOT: [CoffeeRatingWhereInput]
  OR: [CoffeeRatingWhereInput]
  coffee: CoffeeWhereInput
  coffeeId: IntFilter
  coffeeType: CoffeeTypeWhereInput
  coffeeTypeId: IntNullableFilter
  createdAt: DateTimeFilter
  guest: GuestWhereInput
  guestId: IntNullableFilter
  id: IntFilter
  machine: CoffeeMachineWhereInput
  machineId: IntNullableFilter
  rating: IntFilter
}

input CoffeeRatingWhereUniqueInput {
  id: Int
}

input CoffeeRelationFilter {
  is: CoffeeWhereInput
  isNot: CoffeeWhereInput
}

enum CoffeeScalarFieldEnum {
  createdAt
  description
  id
  name
}

input CoffeeScalarWhereWithAggregatesInput {
  AND: [CoffeeScalarWhereWithAggregatesInput]
  NOT: [CoffeeScalarWhereWithAggregatesInput]
  OR: [CoffeeScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
}

type CoffeeSumAggregateOutputType {
  id: Int
}

input CoffeeSumOrderByAggregateInput {
  id: SortOrder
}

type CoffeeType {
  _count: CoffeeTypeCountOutputType!
  coffeeRatings(cursor: CoffeeRatingWhereUniqueInput, distinct: CoffeeRatingScalarFieldEnum, orderBy: CoffeeRatingOrderByWithRelationInput, skip: Int, take: Int, where: CoffeeRatingWhereInput): [CoffeeRating!]!
  createdAt: DateTime!
  description: String!
  id: Int!
  name: String!
}

type CoffeeTypeAvgAggregateOutputType {
  id: Float
}

input CoffeeTypeAvgOrderByAggregateInput {
  id: SortOrder
}

type CoffeeTypeCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  name: Int!
}

input CoffeeTypeCountOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type CoffeeTypeCountOutputType {
  coffeeRatings: Int!
}

input CoffeeTypeCreateInput {
  coffeeRatings: CoffeeRatingCreateNestedManyWithoutCoffeeTypeInput
  createdAt: DateTime
  description: String!
  name: String!
}

input CoffeeTypeCreateNestedOneWithoutCoffeeRatingsInput {
  connect: CoffeeTypeWhereUniqueInput
  connectOrCreate: CoffeeTypeCreateOrConnectWithoutCoffeeRatingsInput
  create: CoffeeTypeUncheckedCreateWithoutCoffeeRatingsInput
}

input CoffeeTypeCreateOrConnectWithoutCoffeeRatingsInput {
  create: CoffeeTypeUncheckedCreateWithoutCoffeeRatingsInput!
  where: CoffeeTypeWhereUniqueInput!
}

input CoffeeTypeCreateWithoutCoffeeRatingsInput {
  createdAt: DateTime
  description: String!
  name: String!
}

type CoffeeTypeMaxAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  name: String
}

input CoffeeTypeMaxOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type CoffeeTypeMinAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  name: String
}

input CoffeeTypeMinOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input CoffeeTypeOrderByWithAggregationInput {
  _avg: CoffeeTypeAvgOrderByAggregateInput
  _count: CoffeeTypeCountOrderByAggregateInput
  _max: CoffeeTypeMaxOrderByAggregateInput
  _min: CoffeeTypeMinOrderByAggregateInput
  _sum: CoffeeTypeSumOrderByAggregateInput
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input CoffeeTypeOrderByWithRelationInput {
  coffeeRatings: CoffeeRatingOrderByRelationAggregateInput
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input CoffeeTypeRelationFilter {
  is: CoffeeTypeWhereInput
  isNot: CoffeeTypeWhereInput
}

enum CoffeeTypeScalarFieldEnum {
  createdAt
  description
  id
  name
}

input CoffeeTypeScalarWhereWithAggregatesInput {
  AND: [CoffeeTypeScalarWhereWithAggregatesInput]
  NOT: [CoffeeTypeScalarWhereWithAggregatesInput]
  OR: [CoffeeTypeScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
}

type CoffeeTypeSumAggregateOutputType {
  id: Int
}

input CoffeeTypeSumOrderByAggregateInput {
  id: SortOrder
}

input CoffeeTypeUncheckedCreateInput {
  coffeeRatings: CoffeeRatingUncheckedCreateNestedManyWithoutCoffeeTypeInput
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
}

input CoffeeTypeUncheckedCreateWithoutCoffeeRatingsInput {
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
}

input CoffeeTypeUncheckedUpdateInput {
  coffeeRatings: CoffeeRatingUncheckedUpdateManyWithoutCoffeeTypeInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeTypeUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeTypeUncheckedUpdateWithoutCoffeeRatingsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeTypeUpdateInput {
  coffeeRatings: CoffeeRatingUpdateManyWithoutCoffeeTypeInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeTypeUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeTypeUpdateOneWithoutCoffeeRatingsInput {
  connect: CoffeeTypeWhereUniqueInput
  connectOrCreate: CoffeeTypeCreateOrConnectWithoutCoffeeRatingsInput
  create: CoffeeTypeUncheckedCreateWithoutCoffeeRatingsInput
  delete: Boolean
  disconnect: Boolean
  update: CoffeeTypeUncheckedUpdateWithoutCoffeeRatingsInput
  upsert: CoffeeTypeUpsertWithoutCoffeeRatingsInput
}

input CoffeeTypeUpdateWithoutCoffeeRatingsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeTypeUpsertWithoutCoffeeRatingsInput {
  create: CoffeeTypeUncheckedCreateWithoutCoffeeRatingsInput!
  update: CoffeeTypeUncheckedUpdateWithoutCoffeeRatingsInput!
}

input CoffeeTypeWhereInput {
  AND: [CoffeeTypeWhereInput]
  NOT: [CoffeeTypeWhereInput]
  OR: [CoffeeTypeWhereInput]
  coffeeRatings: CoffeeRatingListRelationFilter
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  name: StringFilter
}

input CoffeeTypeWhereUniqueInput {
  id: Int
}

input CoffeeUncheckedCreateInput {
  coffeeRatings: CoffeeRatingUncheckedCreateNestedManyWithoutCoffeeInput
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
}

input CoffeeUncheckedCreateWithoutCoffeeRatingsInput {
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
}

input CoffeeUncheckedUpdateInput {
  coffeeRatings: CoffeeRatingUncheckedUpdateManyWithoutCoffeeInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeUncheckedUpdateWithoutCoffeeRatingsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeUpdateInput {
  coffeeRatings: CoffeeRatingUpdateManyWithoutCoffeeInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeUpdateOneRequiredWithoutCoffeeRatingsInput {
  connect: CoffeeWhereUniqueInput
  connectOrCreate: CoffeeCreateOrConnectWithoutCoffeeRatingsInput
  create: CoffeeUncheckedCreateWithoutCoffeeRatingsInput
  update: CoffeeUncheckedUpdateWithoutCoffeeRatingsInput
  upsert: CoffeeUpsertWithoutCoffeeRatingsInput
}

input CoffeeUpdateWithoutCoffeeRatingsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CoffeeUpsertWithoutCoffeeRatingsInput {
  create: CoffeeUncheckedCreateWithoutCoffeeRatingsInput!
  update: CoffeeUncheckedUpdateWithoutCoffeeRatingsInput!
}

input CoffeeWhereInput {
  AND: [CoffeeWhereInput]
  NOT: [CoffeeWhereInput]
  OR: [CoffeeWhereInput]
  coffeeRatings: CoffeeRatingListRelationFilter
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  name: StringFilter
}

input CoffeeWhereUniqueInput {
  id: Int
}

type Comment {
  content: String
  createdAt: DateTime!
  dish: Dish
  dishId: Int
  guest: Guest
  guestId: Int
  id: Int!
  meal: Meal
  mealId: Int
  rating: Int
  updatedAt: DateTime!
}

type CommentAvgAggregateOutputType {
  dishId: Float
  guestId: Float
  id: Float
  mealId: Float
  rating: Float
}

input CommentAvgOrderByAggregateInput {
  dishId: SortOrder
  guestId: SortOrder
  id: SortOrder
  mealId: SortOrder
  rating: SortOrder
}

type CommentCountAggregateOutputType {
  _all: Int!
  content: Int!
  createdAt: Int!
  dishId: Int!
  guestId: Int!
  id: Int!
  mealId: Int!
  rating: Int!
  updatedAt: Int!
}

input CommentCountOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  dishId: SortOrder
  guestId: SortOrder
  id: SortOrder
  mealId: SortOrder
  rating: SortOrder
  updatedAt: SortOrder
}

input CommentCreateInput {
  content: String
  createdAt: DateTime
  dish: DishCreateNestedOneWithoutCommentsInput
  guest: GuestCreateNestedOneWithoutCommentsInput
  meal: MealCreateNestedOneWithoutCommentsInput
  rating: Int
  updatedAt: DateTime
}

input CommentCreateNestedManyWithoutDishInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutDishInput]
  create: [CommentCreateWithoutDishInput]
}

input CommentCreateNestedManyWithoutGuestInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutGuestInput]
  create: [CommentCreateWithoutGuestInput]
}

input CommentCreateNestedManyWithoutMealInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutMealInput]
  create: [CommentCreateWithoutMealInput]
}

input CommentCreateOrConnectWithoutDishInput {
  create: CommentUncheckedCreateWithoutDishInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateOrConnectWithoutGuestInput {
  create: CommentUncheckedCreateWithoutGuestInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateOrConnectWithoutMealInput {
  create: CommentUncheckedCreateWithoutMealInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateWithoutDishInput {
  content: String
  createdAt: DateTime
  guest: GuestCreateNestedOneWithoutCommentsInput
  meal: MealCreateNestedOneWithoutCommentsInput
  rating: Int
  updatedAt: DateTime
}

input CommentCreateWithoutGuestInput {
  content: String
  createdAt: DateTime
  dish: DishCreateNestedOneWithoutCommentsInput
  meal: MealCreateNestedOneWithoutCommentsInput
  rating: Int
  updatedAt: DateTime
}

input CommentCreateWithoutMealInput {
  content: String
  createdAt: DateTime
  dish: DishCreateNestedOneWithoutCommentsInput
  guest: GuestCreateNestedOneWithoutCommentsInput
  rating: Int
  updatedAt: DateTime
}

input CommentListRelationFilter {
  every: CommentWhereInput
  none: CommentWhereInput
  some: CommentWhereInput
}

type CommentMaxAggregateOutputType {
  content: String
  createdAt: DateTime
  dishId: Int
  guestId: Int
  id: Int
  mealId: Int
  rating: Int
  updatedAt: DateTime
}

input CommentMaxOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  dishId: SortOrder
  guestId: SortOrder
  id: SortOrder
  mealId: SortOrder
  rating: SortOrder
  updatedAt: SortOrder
}

type CommentMinAggregateOutputType {
  content: String
  createdAt: DateTime
  dishId: Int
  guestId: Int
  id: Int
  mealId: Int
  rating: Int
  updatedAt: DateTime
}

input CommentMinOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  dishId: SortOrder
  guestId: SortOrder
  id: SortOrder
  mealId: SortOrder
  rating: SortOrder
  updatedAt: SortOrder
}

input CommentOrderByRelationAggregateInput {
  _count: SortOrder
}

input CommentOrderByWithAggregationInput {
  _avg: CommentAvgOrderByAggregateInput
  _count: CommentCountOrderByAggregateInput
  _max: CommentMaxOrderByAggregateInput
  _min: CommentMinOrderByAggregateInput
  _sum: CommentSumOrderByAggregateInput
  content: SortOrder
  createdAt: SortOrder
  dishId: SortOrder
  guestId: SortOrder
  id: SortOrder
  mealId: SortOrder
  rating: SortOrder
  updatedAt: SortOrder
}

input CommentOrderByWithRelationInput {
  content: SortOrder
  createdAt: SortOrder
  dish: DishOrderByWithRelationInput
  dishId: SortOrder
  guest: GuestOrderByWithRelationInput
  guestId: SortOrder
  id: SortOrder
  meal: MealOrderByWithRelationInput
  mealId: SortOrder
  rating: SortOrder
  updatedAt: SortOrder
}

enum CommentScalarFieldEnum {
  content
  createdAt
  dishId
  guestId
  id
  mealId
  rating
  updatedAt
}

input CommentScalarWhereInput {
  AND: [CommentScalarWhereInput]
  NOT: [CommentScalarWhereInput]
  OR: [CommentScalarWhereInput]
  content: StringNullableFilter
  createdAt: DateTimeFilter
  dishId: IntNullableFilter
  guestId: IntNullableFilter
  id: IntFilter
  mealId: IntNullableFilter
  rating: IntNullableFilter
  updatedAt: DateTimeFilter
}

input CommentScalarWhereWithAggregatesInput {
  AND: [CommentScalarWhereWithAggregatesInput]
  NOT: [CommentScalarWhereWithAggregatesInput]
  OR: [CommentScalarWhereWithAggregatesInput]
  content: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  dishId: IntNullableWithAggregatesFilter
  guestId: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  mealId: IntNullableWithAggregatesFilter
  rating: IntNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type CommentSumAggregateOutputType {
  dishId: Int
  guestId: Int
  id: Int
  mealId: Int
  rating: Int
}

input CommentSumOrderByAggregateInput {
  dishId: SortOrder
  guestId: SortOrder
  id: SortOrder
  mealId: SortOrder
  rating: SortOrder
}

input CommentUncheckedCreateInput {
  content: String
  createdAt: DateTime
  dishId: Int
  guestId: Int
  id: Int
  mealId: Int
  rating: Int
  updatedAt: DateTime
}

input CommentUncheckedCreateNestedManyWithoutDishInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutDishInput]
  create: [CommentCreateWithoutDishInput]
}

input CommentUncheckedCreateNestedManyWithoutGuestInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutGuestInput]
  create: [CommentCreateWithoutGuestInput]
}

input CommentUncheckedCreateNestedManyWithoutMealInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutMealInput]
  create: [CommentCreateWithoutMealInput]
}

input CommentUncheckedCreateWithoutDishInput {
  content: String
  createdAt: DateTime
  guestId: Int
  id: Int
  mealId: Int
  rating: Int
  updatedAt: DateTime
}

input CommentUncheckedCreateWithoutGuestInput {
  content: String
  createdAt: DateTime
  dishId: Int
  id: Int
  mealId: Int
  rating: Int
  updatedAt: DateTime
}

input CommentUncheckedCreateWithoutMealInput {
  content: String
  createdAt: DateTime
  dishId: Int
  guestId: Int
  id: Int
  rating: Int
  updatedAt: DateTime
}

input CommentUncheckedUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dishId: NullableIntFieldUpdateOperationsInput
  guestId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mealId: NullableIntFieldUpdateOperationsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUncheckedUpdateManyInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dishId: NullableIntFieldUpdateOperationsInput
  guestId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mealId: NullableIntFieldUpdateOperationsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUncheckedUpdateManyWithoutCommentsInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dishId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mealId: NullableIntFieldUpdateOperationsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUncheckedUpdateManyWithoutDishInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutDishInput]
  create: [CommentCreateWithoutDishInput]
  delete: [CommentWhereUniqueInput]
  deleteMany: [CommentScalarWhereInput]
  disconnect: [CommentWhereUniqueInput]
  set: [CommentWhereUniqueInput]
  update: [CommentUpdateWithWhereUniqueWithoutDishInput]
  updateMany: [CommentUpdateManyWithWhereWithoutDishInput]
  upsert: [CommentUpsertWithWhereUniqueWithoutDishInput]
}

input CommentUncheckedUpdateManyWithoutGuestInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutGuestInput]
  create: [CommentCreateWithoutGuestInput]
  delete: [CommentWhereUniqueInput]
  deleteMany: [CommentScalarWhereInput]
  disconnect: [CommentWhereUniqueInput]
  set: [CommentWhereUniqueInput]
  update: [CommentUpdateWithWhereUniqueWithoutGuestInput]
  updateMany: [CommentUpdateManyWithWhereWithoutGuestInput]
  upsert: [CommentUpsertWithWhereUniqueWithoutGuestInput]
}

input CommentUncheckedUpdateManyWithoutMealInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutMealInput]
  create: [CommentCreateWithoutMealInput]
  delete: [CommentWhereUniqueInput]
  deleteMany: [CommentScalarWhereInput]
  disconnect: [CommentWhereUniqueInput]
  set: [CommentWhereUniqueInput]
  update: [CommentUpdateWithWhereUniqueWithoutMealInput]
  updateMany: [CommentUpdateManyWithWhereWithoutMealInput]
  upsert: [CommentUpsertWithWhereUniqueWithoutMealInput]
}

input CommentUncheckedUpdateWithoutDishInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guestId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mealId: NullableIntFieldUpdateOperationsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUncheckedUpdateWithoutGuestInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dishId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mealId: NullableIntFieldUpdateOperationsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUncheckedUpdateWithoutMealInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dishId: NullableIntFieldUpdateOperationsInput
  guestId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dish: DishUpdateOneWithoutCommentsInput
  guest: GuestUpdateOneWithoutCommentsInput
  meal: MealUpdateOneWithoutCommentsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateManyWithWhereWithoutDishInput {
  data: CommentUncheckedUpdateManyWithoutCommentsInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateManyWithWhereWithoutGuestInput {
  data: CommentUncheckedUpdateManyWithoutCommentsInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateManyWithWhereWithoutMealInput {
  data: CommentUncheckedUpdateManyWithoutCommentsInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateManyWithoutDishInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutDishInput]
  create: [CommentCreateWithoutDishInput]
  delete: [CommentWhereUniqueInput]
  deleteMany: [CommentScalarWhereInput]
  disconnect: [CommentWhereUniqueInput]
  set: [CommentWhereUniqueInput]
  update: [CommentUpdateWithWhereUniqueWithoutDishInput]
  updateMany: [CommentUpdateManyWithWhereWithoutDishInput]
  upsert: [CommentUpsertWithWhereUniqueWithoutDishInput]
}

input CommentUpdateManyWithoutGuestInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutGuestInput]
  create: [CommentCreateWithoutGuestInput]
  delete: [CommentWhereUniqueInput]
  deleteMany: [CommentScalarWhereInput]
  disconnect: [CommentWhereUniqueInput]
  set: [CommentWhereUniqueInput]
  update: [CommentUpdateWithWhereUniqueWithoutGuestInput]
  updateMany: [CommentUpdateManyWithWhereWithoutGuestInput]
  upsert: [CommentUpsertWithWhereUniqueWithoutGuestInput]
}

input CommentUpdateManyWithoutMealInput {
  connect: [CommentWhereUniqueInput]
  connectOrCreate: [CommentCreateOrConnectWithoutMealInput]
  create: [CommentCreateWithoutMealInput]
  delete: [CommentWhereUniqueInput]
  deleteMany: [CommentScalarWhereInput]
  disconnect: [CommentWhereUniqueInput]
  set: [CommentWhereUniqueInput]
  update: [CommentUpdateWithWhereUniqueWithoutMealInput]
  updateMany: [CommentUpdateManyWithWhereWithoutMealInput]
  upsert: [CommentUpsertWithWhereUniqueWithoutMealInput]
}

input CommentUpdateWithWhereUniqueWithoutDishInput {
  data: CommentUncheckedUpdateWithoutDishInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithWhereUniqueWithoutGuestInput {
  data: CommentUncheckedUpdateWithoutGuestInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithWhereUniqueWithoutMealInput {
  data: CommentUncheckedUpdateWithoutMealInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithoutDishInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  guest: GuestUpdateOneWithoutCommentsInput
  meal: MealUpdateOneWithoutCommentsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateWithoutGuestInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dish: DishUpdateOneWithoutCommentsInput
  meal: MealUpdateOneWithoutCommentsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateWithoutMealInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dish: DishUpdateOneWithoutCommentsInput
  guest: GuestUpdateOneWithoutCommentsInput
  rating: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpsertWithWhereUniqueWithoutDishInput {
  create: CommentUncheckedCreateWithoutDishInput!
  update: CommentUncheckedUpdateWithoutDishInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutGuestInput {
  create: CommentUncheckedCreateWithoutGuestInput!
  update: CommentUncheckedUpdateWithoutGuestInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutMealInput {
  create: CommentUncheckedCreateWithoutMealInput!
  update: CommentUncheckedUpdateWithoutMealInput!
  where: CommentWhereUniqueInput!
}

input CommentWhereInput {
  AND: [CommentWhereInput]
  NOT: [CommentWhereInput]
  OR: [CommentWhereInput]
  content: StringNullableFilter
  createdAt: DateTimeFilter
  dish: DishWhereInput
  dishId: IntNullableFilter
  guest: GuestWhereInput
  guestId: IntNullableFilter
  id: IntFilter
  meal: MealWhereInput
  mealId: IntNullableFilter
  rating: IntNullableFilter
  updatedAt: DateTimeFilter
}

input CommentWhereUniqueInput {
  id: Int
}

"""Date custom scalar type"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

"""Decimal custom scalar type"""
scalar Decimal

type Dish {
  _count: DishCountOutputType!
  comments(cursor: CommentWhereUniqueInput, distinct: CommentScalarFieldEnum, orderBy: CommentOrderByWithRelationInput, skip: Int, take: Int, where: CommentWhereInput): [Comment!]!
  createdAt: DateTime!
  description: String!
  dishComponents(cursor: DishComponentWhereUniqueInput, distinct: DishComponentScalarFieldEnum, orderBy: DishComponentOrderByWithRelationInput, skip: Int, take: Int, where: DishComponentWhereInput): [DishComponent!]!
  id: Int!
  meals(cursor: MealWhereUniqueInput, distinct: MealScalarFieldEnum, orderBy: MealOrderByWithRelationInput, skip: Int, take: Int, where: MealWhereInput): [Meal!]!
  name: String!
  url: String!
}

type DishAvgAggregateOutputType {
  id: Float
}

input DishAvgOrderByAggregateInput {
  id: SortOrder
}

type DishComponent {
  _count: DishComponentCountOutputType!
  createdAt: DateTime!
  description: String!
  dishes(cursor: DishWhereUniqueInput, distinct: DishScalarFieldEnum, orderBy: DishOrderByWithRelationInput, skip: Int, take: Int, where: DishWhereInput): [Dish!]!
  id: Int!
  name: String!
  recipes: String
}

type DishComponentAvgAggregateOutputType {
  id: Float
}

input DishComponentAvgOrderByAggregateInput {
  id: SortOrder
}

type DishComponentCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  name: Int!
  recipes: Int!
}

input DishComponentCountOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  recipes: SortOrder
}

type DishComponentCountOutputType {
  dishes: Int!
}

input DishComponentCreateInput {
  createdAt: DateTime
  description: String!
  dishes: DishCreateNestedManyWithoutDishComponentsInput
  name: String!
  recipes: String
}

input DishComponentCreateNestedManyWithoutDishesInput {
  connect: [DishComponentWhereUniqueInput]
  connectOrCreate: [DishComponentCreateOrConnectWithoutDishesInput]
  create: [DishComponentCreateWithoutDishesInput]
}

input DishComponentCreateOrConnectWithoutDishesInput {
  create: DishComponentUncheckedCreateWithoutDishesInput!
  where: DishComponentWhereUniqueInput!
}

input DishComponentCreateWithoutDishesInput {
  createdAt: DateTime
  description: String!
  name: String!
  recipes: String
}

input DishComponentListRelationFilter {
  every: DishComponentWhereInput
  none: DishComponentWhereInput
  some: DishComponentWhereInput
}

type DishComponentMaxAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  name: String
  recipes: String
}

input DishComponentMaxOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  recipes: SortOrder
}

type DishComponentMinAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  name: String
  recipes: String
}

input DishComponentMinOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  recipes: SortOrder
}

input DishComponentOrderByRelationAggregateInput {
  _count: SortOrder
}

input DishComponentOrderByWithAggregationInput {
  _avg: DishComponentAvgOrderByAggregateInput
  _count: DishComponentCountOrderByAggregateInput
  _max: DishComponentMaxOrderByAggregateInput
  _min: DishComponentMinOrderByAggregateInput
  _sum: DishComponentSumOrderByAggregateInput
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  recipes: SortOrder
}

input DishComponentOrderByWithRelationInput {
  createdAt: SortOrder
  description: SortOrder
  dishes: DishOrderByRelationAggregateInput
  id: SortOrder
  name: SortOrder
  recipes: SortOrder
}

enum DishComponentScalarFieldEnum {
  createdAt
  description
  id
  name
  recipes
}

input DishComponentScalarWhereInput {
  AND: [DishComponentScalarWhereInput]
  NOT: [DishComponentScalarWhereInput]
  OR: [DishComponentScalarWhereInput]
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  name: StringFilter
  recipes: StringNullableFilter
}

input DishComponentScalarWhereWithAggregatesInput {
  AND: [DishComponentScalarWhereWithAggregatesInput]
  NOT: [DishComponentScalarWhereWithAggregatesInput]
  OR: [DishComponentScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  recipes: StringNullableWithAggregatesFilter
}

type DishComponentSumAggregateOutputType {
  id: Int
}

input DishComponentSumOrderByAggregateInput {
  id: SortOrder
}

input DishComponentUncheckedCreateInput {
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
  recipes: String
}

input DishComponentUncheckedCreateWithoutDishesInput {
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
  recipes: String
}

input DishComponentUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  recipes: NullableStringFieldUpdateOperationsInput
}

input DishComponentUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  recipes: NullableStringFieldUpdateOperationsInput
}

input DishComponentUncheckedUpdateManyWithoutDishComponentsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  recipes: NullableStringFieldUpdateOperationsInput
}

input DishComponentUncheckedUpdateWithoutDishesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  recipes: NullableStringFieldUpdateOperationsInput
}

input DishComponentUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  dishes: DishUpdateManyWithoutDishComponentsInput
  name: StringFieldUpdateOperationsInput
  recipes: NullableStringFieldUpdateOperationsInput
}

input DishComponentUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  recipes: NullableStringFieldUpdateOperationsInput
}

input DishComponentUpdateManyWithWhereWithoutDishesInput {
  data: DishComponentUncheckedUpdateManyWithoutDishComponentsInput!
  where: DishComponentScalarWhereInput!
}

input DishComponentUpdateManyWithoutDishesInput {
  connect: [DishComponentWhereUniqueInput]
  connectOrCreate: [DishComponentCreateOrConnectWithoutDishesInput]
  create: [DishComponentCreateWithoutDishesInput]
  delete: [DishComponentWhereUniqueInput]
  deleteMany: [DishComponentScalarWhereInput]
  disconnect: [DishComponentWhereUniqueInput]
  set: [DishComponentWhereUniqueInput]
  update: [DishComponentUpdateWithWhereUniqueWithoutDishesInput]
  updateMany: [DishComponentUpdateManyWithWhereWithoutDishesInput]
  upsert: [DishComponentUpsertWithWhereUniqueWithoutDishesInput]
}

input DishComponentUpdateWithWhereUniqueWithoutDishesInput {
  data: DishComponentUncheckedUpdateWithoutDishesInput!
  where: DishComponentWhereUniqueInput!
}

input DishComponentUpdateWithoutDishesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  recipes: NullableStringFieldUpdateOperationsInput
}

input DishComponentUpsertWithWhereUniqueWithoutDishesInput {
  create: DishComponentUncheckedCreateWithoutDishesInput!
  update: DishComponentUncheckedUpdateWithoutDishesInput!
  where: DishComponentWhereUniqueInput!
}

input DishComponentWhereInput {
  AND: [DishComponentWhereInput]
  NOT: [DishComponentWhereInput]
  OR: [DishComponentWhereInput]
  createdAt: DateTimeFilter
  description: StringFilter
  dishes: DishListRelationFilter
  id: IntFilter
  name: StringFilter
  recipes: StringNullableFilter
}

input DishComponentWhereUniqueInput {
  id: Int
}

type DishCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  name: Int!
  url: Int!
}

input DishCountOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

type DishCountOutputType {
  comments: Int!
  dishComponents: Int!
  meals: Int!
}

input DishCreateInput {
  comments: CommentCreateNestedManyWithoutDishInput
  createdAt: DateTime
  description: String!
  dishComponents: DishComponentCreateNestedManyWithoutDishesInput
  meals: MealCreateNestedManyWithoutDishesInput
  name: String!
  url: String!
}

input DishCreateNestedManyWithoutDishComponentsInput {
  connect: [DishWhereUniqueInput]
  connectOrCreate: [DishCreateOrConnectWithoutDishComponentsInput]
  create: [DishCreateWithoutDishComponentsInput]
}

input DishCreateNestedManyWithoutMealsInput {
  connect: [DishWhereUniqueInput]
  connectOrCreate: [DishCreateOrConnectWithoutMealsInput]
  create: [DishCreateWithoutMealsInput]
}

input DishCreateNestedOneWithoutCommentsInput {
  connect: DishWhereUniqueInput
  connectOrCreate: DishCreateOrConnectWithoutCommentsInput
  create: DishUncheckedCreateWithoutCommentsInput
}

input DishCreateOrConnectWithoutCommentsInput {
  create: DishUncheckedCreateWithoutCommentsInput!
  where: DishWhereUniqueInput!
}

input DishCreateOrConnectWithoutDishComponentsInput {
  create: DishUncheckedCreateWithoutDishComponentsInput!
  where: DishWhereUniqueInput!
}

input DishCreateOrConnectWithoutMealsInput {
  create: DishUncheckedCreateWithoutMealsInput!
  where: DishWhereUniqueInput!
}

input DishCreateWithoutCommentsInput {
  createdAt: DateTime
  description: String!
  dishComponents: DishComponentCreateNestedManyWithoutDishesInput
  meals: MealCreateNestedManyWithoutDishesInput
  name: String!
  url: String!
}

input DishCreateWithoutDishComponentsInput {
  comments: CommentCreateNestedManyWithoutDishInput
  createdAt: DateTime
  description: String!
  meals: MealCreateNestedManyWithoutDishesInput
  name: String!
  url: String!
}

input DishCreateWithoutMealsInput {
  comments: CommentCreateNestedManyWithoutDishInput
  createdAt: DateTime
  description: String!
  dishComponents: DishComponentCreateNestedManyWithoutDishesInput
  name: String!
  url: String!
}

input DishListRelationFilter {
  every: DishWhereInput
  none: DishWhereInput
  some: DishWhereInput
}

type DishMaxAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  name: String
  url: String
}

input DishMaxOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

type DishMinAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  name: String
  url: String
}

input DishMinOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

input DishOrderByRelationAggregateInput {
  _count: SortOrder
}

input DishOrderByWithAggregationInput {
  _avg: DishAvgOrderByAggregateInput
  _count: DishCountOrderByAggregateInput
  _max: DishMaxOrderByAggregateInput
  _min: DishMinOrderByAggregateInput
  _sum: DishSumOrderByAggregateInput
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

input DishOrderByWithRelationInput {
  comments: CommentOrderByRelationAggregateInput
  createdAt: SortOrder
  description: SortOrder
  dishComponents: DishComponentOrderByRelationAggregateInput
  id: SortOrder
  meals: MealOrderByRelationAggregateInput
  name: SortOrder
  url: SortOrder
}

input DishRelationFilter {
  is: DishWhereInput
  isNot: DishWhereInput
}

enum DishScalarFieldEnum {
  createdAt
  description
  id
  name
  url
}

input DishScalarWhereInput {
  AND: [DishScalarWhereInput]
  NOT: [DishScalarWhereInput]
  OR: [DishScalarWhereInput]
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  name: StringFilter
  url: StringFilter
}

input DishScalarWhereWithAggregatesInput {
  AND: [DishScalarWhereWithAggregatesInput]
  NOT: [DishScalarWhereWithAggregatesInput]
  OR: [DishScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  url: StringWithAggregatesFilter
}

type DishSumAggregateOutputType {
  id: Int
}

input DishSumOrderByAggregateInput {
  id: SortOrder
}

input DishUncheckedCreateInput {
  comments: CommentUncheckedCreateNestedManyWithoutDishInput
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
  url: String!
}

input DishUncheckedCreateWithoutCommentsInput {
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
  url: String!
}

input DishUncheckedCreateWithoutDishComponentsInput {
  comments: CommentUncheckedCreateNestedManyWithoutDishInput
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
  url: String!
}

input DishUncheckedCreateWithoutMealsInput {
  comments: CommentUncheckedCreateNestedManyWithoutDishInput
  createdAt: DateTime
  description: String!
  id: Int
  name: String!
  url: String!
}

input DishUncheckedUpdateInput {
  comments: CommentUncheckedUpdateManyWithoutDishInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUncheckedUpdateManyWithoutDishesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUncheckedUpdateWithoutCommentsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUncheckedUpdateWithoutDishComponentsInput {
  comments: CommentUncheckedUpdateManyWithoutDishInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUncheckedUpdateWithoutMealsInput {
  comments: CommentUncheckedUpdateManyWithoutDishInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUpdateInput {
  comments: CommentUpdateManyWithoutDishInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  dishComponents: DishComponentUpdateManyWithoutDishesInput
  meals: MealUpdateManyWithoutDishesInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUpdateManyWithWhereWithoutDishComponentsInput {
  data: DishUncheckedUpdateManyWithoutDishesInput!
  where: DishScalarWhereInput!
}

input DishUpdateManyWithWhereWithoutMealsInput {
  data: DishUncheckedUpdateManyWithoutDishesInput!
  where: DishScalarWhereInput!
}

input DishUpdateManyWithoutDishComponentsInput {
  connect: [DishWhereUniqueInput]
  connectOrCreate: [DishCreateOrConnectWithoutDishComponentsInput]
  create: [DishCreateWithoutDishComponentsInput]
  delete: [DishWhereUniqueInput]
  deleteMany: [DishScalarWhereInput]
  disconnect: [DishWhereUniqueInput]
  set: [DishWhereUniqueInput]
  update: [DishUpdateWithWhereUniqueWithoutDishComponentsInput]
  updateMany: [DishUpdateManyWithWhereWithoutDishComponentsInput]
  upsert: [DishUpsertWithWhereUniqueWithoutDishComponentsInput]
}

input DishUpdateManyWithoutMealsInput {
  connect: [DishWhereUniqueInput]
  connectOrCreate: [DishCreateOrConnectWithoutMealsInput]
  create: [DishCreateWithoutMealsInput]
  delete: [DishWhereUniqueInput]
  deleteMany: [DishScalarWhereInput]
  disconnect: [DishWhereUniqueInput]
  set: [DishWhereUniqueInput]
  update: [DishUpdateWithWhereUniqueWithoutMealsInput]
  updateMany: [DishUpdateManyWithWhereWithoutMealsInput]
  upsert: [DishUpsertWithWhereUniqueWithoutMealsInput]
}

input DishUpdateOneWithoutCommentsInput {
  connect: DishWhereUniqueInput
  connectOrCreate: DishCreateOrConnectWithoutCommentsInput
  create: DishUncheckedCreateWithoutCommentsInput
  delete: Boolean
  disconnect: Boolean
  update: DishUncheckedUpdateWithoutCommentsInput
  upsert: DishUpsertWithoutCommentsInput
}

input DishUpdateWithWhereUniqueWithoutDishComponentsInput {
  data: DishUncheckedUpdateWithoutDishComponentsInput!
  where: DishWhereUniqueInput!
}

input DishUpdateWithWhereUniqueWithoutMealsInput {
  data: DishUncheckedUpdateWithoutMealsInput!
  where: DishWhereUniqueInput!
}

input DishUpdateWithoutCommentsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  dishComponents: DishComponentUpdateManyWithoutDishesInput
  meals: MealUpdateManyWithoutDishesInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUpdateWithoutDishComponentsInput {
  comments: CommentUpdateManyWithoutDishInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  meals: MealUpdateManyWithoutDishesInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUpdateWithoutMealsInput {
  comments: CommentUpdateManyWithoutDishInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  dishComponents: DishComponentUpdateManyWithoutDishesInput
  name: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DishUpsertWithWhereUniqueWithoutDishComponentsInput {
  create: DishUncheckedCreateWithoutDishComponentsInput!
  update: DishUncheckedUpdateWithoutDishComponentsInput!
  where: DishWhereUniqueInput!
}

input DishUpsertWithWhereUniqueWithoutMealsInput {
  create: DishUncheckedCreateWithoutMealsInput!
  update: DishUncheckedUpdateWithoutMealsInput!
  where: DishWhereUniqueInput!
}

input DishUpsertWithoutCommentsInput {
  create: DishUncheckedCreateWithoutCommentsInput!
  update: DishUncheckedUpdateWithoutCommentsInput!
}

input DishWhereInput {
  AND: [DishWhereInput]
  NOT: [DishWhereInput]
  OR: [DishWhereInput]
  comments: CommentListRelationFilter
  createdAt: DateTimeFilter
  description: StringFilter
  dishComponents: DishComponentListRelationFilter
  id: IntFilter
  meals: MealListRelationFilter
  name: StringFilter
  url: StringFilter
}

input DishWhereUniqueInput {
  id: Int
}

type Enum {
  fields: [String!]!
  name: String!
}

type Field {
  create: Boolean!
  editor: Boolean!
  filter: Boolean!
  id: String!
  isId: Boolean!
  kind: KindEnum!
  list: Boolean!
  name: String!
  order: Int!
  read: Boolean!
  relationField: Boolean
  required: Boolean!
  sort: Boolean!
  title: String!
  type: String!
  unique: Boolean!
  update: Boolean!
  upload: Boolean!
}

type Guest {
  _count: GuestCountOutputType!
  coffeeRatings(cursor: CoffeeRatingWhereUniqueInput, distinct: CoffeeRatingScalarFieldEnum, orderBy: CoffeeRatingOrderByWithRelationInput, skip: Int, take: Int, where: CoffeeRatingWhereInput): [CoffeeRating!]!
  comments(cursor: CommentWhereUniqueInput, distinct: CommentScalarFieldEnum, orderBy: CommentOrderByWithRelationInput, skip: Int, take: Int, where: CommentWhereInput): [Comment!]!
  createdAt: DateTime!
  email: String!
  id: Int!
  meals(cursor: MealWhereUniqueInput, distinct: MealScalarFieldEnum, orderBy: MealOrderByWithRelationInput, skip: Int, take: Int, where: MealWhereInput): [Meal!]!
  name: String
  password: String!
}

type GuestAvgAggregateOutputType {
  id: Float
}

input GuestAvgOrderByAggregateInput {
  id: SortOrder
}

type GuestCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  email: Int!
  id: Int!
  name: Int!
  password: Int!
}

input GuestCountOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
}

type GuestCountOutputType {
  coffeeRatings: Int!
  comments: Int!
  meals: Int!
}

input GuestCreateInput {
  coffeeRatings: CoffeeRatingCreateNestedManyWithoutGuestInput
  comments: CommentCreateNestedManyWithoutGuestInput
  createdAt: DateTime
  email: String!
  meals: MealCreateNestedManyWithoutGuestsInput
  name: String
  password: String!
}

input GuestCreateNestedManyWithoutMealsInput {
  connect: [GuestWhereUniqueInput]
  connectOrCreate: [GuestCreateOrConnectWithoutMealsInput]
  create: [GuestCreateWithoutMealsInput]
}

input GuestCreateNestedOneWithoutCoffeeRatingsInput {
  connect: GuestWhereUniqueInput
  connectOrCreate: GuestCreateOrConnectWithoutCoffeeRatingsInput
  create: GuestUncheckedCreateWithoutCoffeeRatingsInput
}

input GuestCreateNestedOneWithoutCommentsInput {
  connect: GuestWhereUniqueInput
  connectOrCreate: GuestCreateOrConnectWithoutCommentsInput
  create: GuestUncheckedCreateWithoutCommentsInput
}

input GuestCreateOrConnectWithoutCoffeeRatingsInput {
  create: GuestUncheckedCreateWithoutCoffeeRatingsInput!
  where: GuestWhereUniqueInput!
}

input GuestCreateOrConnectWithoutCommentsInput {
  create: GuestUncheckedCreateWithoutCommentsInput!
  where: GuestWhereUniqueInput!
}

input GuestCreateOrConnectWithoutMealsInput {
  create: GuestUncheckedCreateWithoutMealsInput!
  where: GuestWhereUniqueInput!
}

input GuestCreateWithoutCoffeeRatingsInput {
  comments: CommentCreateNestedManyWithoutGuestInput
  createdAt: DateTime
  email: String!
  meals: MealCreateNestedManyWithoutGuestsInput
  name: String
  password: String!
}

input GuestCreateWithoutCommentsInput {
  coffeeRatings: CoffeeRatingCreateNestedManyWithoutGuestInput
  createdAt: DateTime
  email: String!
  meals: MealCreateNestedManyWithoutGuestsInput
  name: String
  password: String!
}

input GuestCreateWithoutMealsInput {
  coffeeRatings: CoffeeRatingCreateNestedManyWithoutGuestInput
  comments: CommentCreateNestedManyWithoutGuestInput
  createdAt: DateTime
  email: String!
  name: String
  password: String!
}

input GuestListRelationFilter {
  every: GuestWhereInput
  none: GuestWhereInput
  some: GuestWhereInput
}

type GuestMaxAggregateOutputType {
  createdAt: DateTime
  email: String
  id: Int
  name: String
  password: String
}

input GuestMaxOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
}

type GuestMinAggregateOutputType {
  createdAt: DateTime
  email: String
  id: Int
  name: String
  password: String
}

input GuestMinOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
}

input GuestOrderByRelationAggregateInput {
  _count: SortOrder
}

input GuestOrderByWithAggregationInput {
  _avg: GuestAvgOrderByAggregateInput
  _count: GuestCountOrderByAggregateInput
  _max: GuestMaxOrderByAggregateInput
  _min: GuestMinOrderByAggregateInput
  _sum: GuestSumOrderByAggregateInput
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
}

input GuestOrderByWithRelationInput {
  coffeeRatings: CoffeeRatingOrderByRelationAggregateInput
  comments: CommentOrderByRelationAggregateInput
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  meals: MealOrderByRelationAggregateInput
  name: SortOrder
  password: SortOrder
}

input GuestRelationFilter {
  is: GuestWhereInput
  isNot: GuestWhereInput
}

enum GuestScalarFieldEnum {
  createdAt
  email
  id
  name
  password
}

input GuestScalarWhereInput {
  AND: [GuestScalarWhereInput]
  NOT: [GuestScalarWhereInput]
  OR: [GuestScalarWhereInput]
  createdAt: DateTimeFilter
  email: StringFilter
  id: IntFilter
  name: StringNullableFilter
  password: StringFilter
}

input GuestScalarWhereWithAggregatesInput {
  AND: [GuestScalarWhereWithAggregatesInput]
  NOT: [GuestScalarWhereWithAggregatesInput]
  OR: [GuestScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  email: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  password: StringWithAggregatesFilter
}

type GuestSumAggregateOutputType {
  id: Int
}

input GuestSumOrderByAggregateInput {
  id: SortOrder
}

input GuestUncheckedCreateInput {
  coffeeRatings: CoffeeRatingUncheckedCreateNestedManyWithoutGuestInput
  comments: CommentUncheckedCreateNestedManyWithoutGuestInput
  createdAt: DateTime
  email: String!
  id: Int
  name: String
  password: String!
}

input GuestUncheckedCreateWithoutCoffeeRatingsInput {
  comments: CommentUncheckedCreateNestedManyWithoutGuestInput
  createdAt: DateTime
  email: String!
  id: Int
  name: String
  password: String!
}

input GuestUncheckedCreateWithoutCommentsInput {
  coffeeRatings: CoffeeRatingUncheckedCreateNestedManyWithoutGuestInput
  createdAt: DateTime
  email: String!
  id: Int
  name: String
  password: String!
}

input GuestUncheckedCreateWithoutMealsInput {
  coffeeRatings: CoffeeRatingUncheckedCreateNestedManyWithoutGuestInput
  comments: CommentUncheckedCreateNestedManyWithoutGuestInput
  createdAt: DateTime
  email: String!
  id: Int
  name: String
  password: String!
}

input GuestUncheckedUpdateInput {
  coffeeRatings: CoffeeRatingUncheckedUpdateManyWithoutGuestInput
  comments: CommentUncheckedUpdateManyWithoutGuestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUncheckedUpdateManyWithoutGuestsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUncheckedUpdateWithoutCoffeeRatingsInput {
  comments: CommentUncheckedUpdateManyWithoutGuestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUncheckedUpdateWithoutCommentsInput {
  coffeeRatings: CoffeeRatingUncheckedUpdateManyWithoutGuestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUncheckedUpdateWithoutMealsInput {
  coffeeRatings: CoffeeRatingUncheckedUpdateManyWithoutGuestInput
  comments: CommentUncheckedUpdateManyWithoutGuestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUpdateInput {
  coffeeRatings: CoffeeRatingUpdateManyWithoutGuestInput
  comments: CommentUpdateManyWithoutGuestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  meals: MealUpdateManyWithoutGuestsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUpdateManyWithWhereWithoutMealsInput {
  data: GuestUncheckedUpdateManyWithoutGuestsInput!
  where: GuestScalarWhereInput!
}

input GuestUpdateManyWithoutMealsInput {
  connect: [GuestWhereUniqueInput]
  connectOrCreate: [GuestCreateOrConnectWithoutMealsInput]
  create: [GuestCreateWithoutMealsInput]
  delete: [GuestWhereUniqueInput]
  deleteMany: [GuestScalarWhereInput]
  disconnect: [GuestWhereUniqueInput]
  set: [GuestWhereUniqueInput]
  update: [GuestUpdateWithWhereUniqueWithoutMealsInput]
  updateMany: [GuestUpdateManyWithWhereWithoutMealsInput]
  upsert: [GuestUpsertWithWhereUniqueWithoutMealsInput]
}

input GuestUpdateOneWithoutCoffeeRatingsInput {
  connect: GuestWhereUniqueInput
  connectOrCreate: GuestCreateOrConnectWithoutCoffeeRatingsInput
  create: GuestUncheckedCreateWithoutCoffeeRatingsInput
  delete: Boolean
  disconnect: Boolean
  update: GuestUncheckedUpdateWithoutCoffeeRatingsInput
  upsert: GuestUpsertWithoutCoffeeRatingsInput
}

input GuestUpdateOneWithoutCommentsInput {
  connect: GuestWhereUniqueInput
  connectOrCreate: GuestCreateOrConnectWithoutCommentsInput
  create: GuestUncheckedCreateWithoutCommentsInput
  delete: Boolean
  disconnect: Boolean
  update: GuestUncheckedUpdateWithoutCommentsInput
  upsert: GuestUpsertWithoutCommentsInput
}

input GuestUpdateWithWhereUniqueWithoutMealsInput {
  data: GuestUncheckedUpdateWithoutMealsInput!
  where: GuestWhereUniqueInput!
}

input GuestUpdateWithoutCoffeeRatingsInput {
  comments: CommentUpdateManyWithoutGuestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  meals: MealUpdateManyWithoutGuestsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUpdateWithoutCommentsInput {
  coffeeRatings: CoffeeRatingUpdateManyWithoutGuestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  meals: MealUpdateManyWithoutGuestsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUpdateWithoutMealsInput {
  coffeeRatings: CoffeeRatingUpdateManyWithoutGuestInput
  comments: CommentUpdateManyWithoutGuestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input GuestUpsertWithWhereUniqueWithoutMealsInput {
  create: GuestUncheckedCreateWithoutMealsInput!
  update: GuestUncheckedUpdateWithoutMealsInput!
  where: GuestWhereUniqueInput!
}

input GuestUpsertWithoutCoffeeRatingsInput {
  create: GuestUncheckedCreateWithoutCoffeeRatingsInput!
  update: GuestUncheckedUpdateWithoutCoffeeRatingsInput!
}

input GuestUpsertWithoutCommentsInput {
  create: GuestUncheckedCreateWithoutCommentsInput!
  update: GuestUncheckedUpdateWithoutCommentsInput!
}

input GuestWhereInput {
  AND: [GuestWhereInput]
  NOT: [GuestWhereInput]
  OR: [GuestWhereInput]
  coffeeRatings: CoffeeRatingListRelationFilter
  comments: CommentListRelationFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: IntFilter
  meals: MealListRelationFilter
  name: StringNullableFilter
  password: StringFilter
}

input GuestWhereUniqueInput {
  email: String
  id: Int
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int]
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int]
}

"""Json custom scalar type"""
scalar Json

enum KindEnum {
  enum
  object
  scalar
}

type Meal {
  _count: MealCountOutputType!
  comments(cursor: CommentWhereUniqueInput, distinct: CommentScalarFieldEnum, orderBy: CommentOrderByWithRelationInput, skip: Int, take: Int, where: CommentWhereInput): [Comment!]!
  createdAt: DateTime!
  date: DateTime!
  description: String!
  dishes(cursor: DishWhereUniqueInput, distinct: DishScalarFieldEnum, orderBy: DishOrderByWithRelationInput, skip: Int, take: Int, where: DishWhereInput): [Dish!]!
  guests(cursor: GuestWhereUniqueInput, distinct: GuestScalarFieldEnum, orderBy: GuestOrderByWithRelationInput, skip: Int, take: Int, where: GuestWhereInput): [Guest!]!
  id: Int!
  name: String!
}

type MealAvgAggregateOutputType {
  id: Float
}

input MealAvgOrderByAggregateInput {
  id: SortOrder
}

type MealCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  date: Int!
  description: Int!
  id: Int!
  name: Int!
}

input MealCountOrderByAggregateInput {
  createdAt: SortOrder
  date: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type MealCountOutputType {
  comments: Int!
  dishes: Int!
  guests: Int!
}

input MealCreateInput {
  comments: CommentCreateNestedManyWithoutMealInput
  createdAt: DateTime
  date: DateTime!
  description: String!
  dishes: DishCreateNestedManyWithoutMealsInput
  guests: GuestCreateNestedManyWithoutMealsInput
  name: String!
}

input MealCreateNestedManyWithoutDishesInput {
  connect: [MealWhereUniqueInput]
  connectOrCreate: [MealCreateOrConnectWithoutDishesInput]
  create: [MealCreateWithoutDishesInput]
}

input MealCreateNestedManyWithoutGuestsInput {
  connect: [MealWhereUniqueInput]
  connectOrCreate: [MealCreateOrConnectWithoutGuestsInput]
  create: [MealCreateWithoutGuestsInput]
}

input MealCreateNestedOneWithoutCommentsInput {
  connect: MealWhereUniqueInput
  connectOrCreate: MealCreateOrConnectWithoutCommentsInput
  create: MealUncheckedCreateWithoutCommentsInput
}

input MealCreateOrConnectWithoutCommentsInput {
  create: MealUncheckedCreateWithoutCommentsInput!
  where: MealWhereUniqueInput!
}

input MealCreateOrConnectWithoutDishesInput {
  create: MealUncheckedCreateWithoutDishesInput!
  where: MealWhereUniqueInput!
}

input MealCreateOrConnectWithoutGuestsInput {
  create: MealUncheckedCreateWithoutGuestsInput!
  where: MealWhereUniqueInput!
}

input MealCreateWithoutCommentsInput {
  createdAt: DateTime
  date: DateTime!
  description: String!
  dishes: DishCreateNestedManyWithoutMealsInput
  guests: GuestCreateNestedManyWithoutMealsInput
  name: String!
}

input MealCreateWithoutDishesInput {
  comments: CommentCreateNestedManyWithoutMealInput
  createdAt: DateTime
  date: DateTime!
  description: String!
  guests: GuestCreateNestedManyWithoutMealsInput
  name: String!
}

input MealCreateWithoutGuestsInput {
  comments: CommentCreateNestedManyWithoutMealInput
  createdAt: DateTime
  date: DateTime!
  description: String!
  dishes: DishCreateNestedManyWithoutMealsInput
  name: String!
}

input MealListRelationFilter {
  every: MealWhereInput
  none: MealWhereInput
  some: MealWhereInput
}

type MealMaxAggregateOutputType {
  createdAt: DateTime
  date: DateTime
  description: String
  id: Int
  name: String
}

input MealMaxOrderByAggregateInput {
  createdAt: SortOrder
  date: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type MealMinAggregateOutputType {
  createdAt: DateTime
  date: DateTime
  description: String
  id: Int
  name: String
}

input MealMinOrderByAggregateInput {
  createdAt: SortOrder
  date: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input MealOrderByRelationAggregateInput {
  _count: SortOrder
}

input MealOrderByWithAggregationInput {
  _avg: MealAvgOrderByAggregateInput
  _count: MealCountOrderByAggregateInput
  _max: MealMaxOrderByAggregateInput
  _min: MealMinOrderByAggregateInput
  _sum: MealSumOrderByAggregateInput
  createdAt: SortOrder
  date: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input MealOrderByWithRelationInput {
  comments: CommentOrderByRelationAggregateInput
  createdAt: SortOrder
  date: SortOrder
  description: SortOrder
  dishes: DishOrderByRelationAggregateInput
  guests: GuestOrderByRelationAggregateInput
  id: SortOrder
  name: SortOrder
}

input MealRelationFilter {
  is: MealWhereInput
  isNot: MealWhereInput
}

enum MealScalarFieldEnum {
  createdAt
  date
  description
  id
  name
}

input MealScalarWhereInput {
  AND: [MealScalarWhereInput]
  NOT: [MealScalarWhereInput]
  OR: [MealScalarWhereInput]
  createdAt: DateTimeFilter
  date: DateTimeFilter
  description: StringFilter
  id: IntFilter
  name: StringFilter
}

input MealScalarWhereWithAggregatesInput {
  AND: [MealScalarWhereWithAggregatesInput]
  NOT: [MealScalarWhereWithAggregatesInput]
  OR: [MealScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  date: DateTimeWithAggregatesFilter
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
}

type MealSumAggregateOutputType {
  id: Int
}

input MealSumOrderByAggregateInput {
  id: SortOrder
}

input MealUncheckedCreateInput {
  comments: CommentUncheckedCreateNestedManyWithoutMealInput
  createdAt: DateTime
  date: DateTime!
  description: String!
  id: Int
  name: String!
}

input MealUncheckedCreateWithoutCommentsInput {
  createdAt: DateTime
  date: DateTime!
  description: String!
  id: Int
  name: String!
}

input MealUncheckedCreateWithoutDishesInput {
  comments: CommentUncheckedCreateNestedManyWithoutMealInput
  createdAt: DateTime
  date: DateTime!
  description: String!
  id: Int
  name: String!
}

input MealUncheckedCreateWithoutGuestsInput {
  comments: CommentUncheckedCreateNestedManyWithoutMealInput
  createdAt: DateTime
  date: DateTime!
  description: String!
  id: Int
  name: String!
}

input MealUncheckedUpdateInput {
  comments: CommentUncheckedUpdateManyWithoutMealInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input MealUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input MealUncheckedUpdateManyWithoutMealsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input MealUncheckedUpdateWithoutCommentsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input MealUncheckedUpdateWithoutDishesInput {
  comments: CommentUncheckedUpdateManyWithoutMealInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input MealUncheckedUpdateWithoutGuestsInput {
  comments: CommentUncheckedUpdateManyWithoutMealInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input MealUpdateInput {
  comments: CommentUpdateManyWithoutMealInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  dishes: DishUpdateManyWithoutMealsInput
  guests: GuestUpdateManyWithoutMealsInput
  name: StringFieldUpdateOperationsInput
}

input MealUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input MealUpdateManyWithWhereWithoutDishesInput {
  data: MealUncheckedUpdateManyWithoutMealsInput!
  where: MealScalarWhereInput!
}

input MealUpdateManyWithWhereWithoutGuestsInput {
  data: MealUncheckedUpdateManyWithoutMealsInput!
  where: MealScalarWhereInput!
}

input MealUpdateManyWithoutDishesInput {
  connect: [MealWhereUniqueInput]
  connectOrCreate: [MealCreateOrConnectWithoutDishesInput]
  create: [MealCreateWithoutDishesInput]
  delete: [MealWhereUniqueInput]
  deleteMany: [MealScalarWhereInput]
  disconnect: [MealWhereUniqueInput]
  set: [MealWhereUniqueInput]
  update: [MealUpdateWithWhereUniqueWithoutDishesInput]
  updateMany: [MealUpdateManyWithWhereWithoutDishesInput]
  upsert: [MealUpsertWithWhereUniqueWithoutDishesInput]
}

input MealUpdateManyWithoutGuestsInput {
  connect: [MealWhereUniqueInput]
  connectOrCreate: [MealCreateOrConnectWithoutGuestsInput]
  create: [MealCreateWithoutGuestsInput]
  delete: [MealWhereUniqueInput]
  deleteMany: [MealScalarWhereInput]
  disconnect: [MealWhereUniqueInput]
  set: [MealWhereUniqueInput]
  update: [MealUpdateWithWhereUniqueWithoutGuestsInput]
  updateMany: [MealUpdateManyWithWhereWithoutGuestsInput]
  upsert: [MealUpsertWithWhereUniqueWithoutGuestsInput]
}

input MealUpdateOneWithoutCommentsInput {
  connect: MealWhereUniqueInput
  connectOrCreate: MealCreateOrConnectWithoutCommentsInput
  create: MealUncheckedCreateWithoutCommentsInput
  delete: Boolean
  disconnect: Boolean
  update: MealUncheckedUpdateWithoutCommentsInput
  upsert: MealUpsertWithoutCommentsInput
}

input MealUpdateWithWhereUniqueWithoutDishesInput {
  data: MealUncheckedUpdateWithoutDishesInput!
  where: MealWhereUniqueInput!
}

input MealUpdateWithWhereUniqueWithoutGuestsInput {
  data: MealUncheckedUpdateWithoutGuestsInput!
  where: MealWhereUniqueInput!
}

input MealUpdateWithoutCommentsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  dishes: DishUpdateManyWithoutMealsInput
  guests: GuestUpdateManyWithoutMealsInput
  name: StringFieldUpdateOperationsInput
}

input MealUpdateWithoutDishesInput {
  comments: CommentUpdateManyWithoutMealInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  guests: GuestUpdateManyWithoutMealsInput
  name: StringFieldUpdateOperationsInput
}

input MealUpdateWithoutGuestsInput {
  comments: CommentUpdateManyWithoutMealInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  dishes: DishUpdateManyWithoutMealsInput
  name: StringFieldUpdateOperationsInput
}

input MealUpsertWithWhereUniqueWithoutDishesInput {
  create: MealUncheckedCreateWithoutDishesInput!
  update: MealUncheckedUpdateWithoutDishesInput!
  where: MealWhereUniqueInput!
}

input MealUpsertWithWhereUniqueWithoutGuestsInput {
  create: MealUncheckedCreateWithoutGuestsInput!
  update: MealUncheckedUpdateWithoutGuestsInput!
  where: MealWhereUniqueInput!
}

input MealUpsertWithoutCommentsInput {
  create: MealUncheckedCreateWithoutCommentsInput!
  update: MealUncheckedUpdateWithoutCommentsInput!
}

input MealWhereInput {
  AND: [MealWhereInput]
  NOT: [MealWhereInput]
  OR: [MealWhereInput]
  comments: CommentListRelationFilter
  createdAt: DateTimeFilter
  date: DateTimeFilter
  description: StringFilter
  dishes: DishListRelationFilter
  guests: GuestListRelationFilter
  id: IntFilter
  name: StringFilter
}

input MealWhereUniqueInput {
  id: Int
}

type Model {
  create: Boolean!
  delete: Boolean!
  displayFields: [String!]!
  fields: [Field!]!
  id: String!
  idField: String!
  name: String!
  update: Boolean!
}

type Mutation {
  createOneCoffee(data: CoffeeCreateInput!): Coffee!
  createOneCoffeeMachine(data: CoffeeMachineCreateInput!): CoffeeMachine!
  createOneCoffeeRating(data: CoffeeRatingCreateInput!): CoffeeRating!
  createOneCoffeeType(data: CoffeeTypeCreateInput!): CoffeeType!
  createOneComment(data: CommentCreateInput!): Comment!
  createOneDish(data: DishCreateInput!): Dish!
  createOneDishComponent(data: DishComponentCreateInput!): DishComponent!
  createOneGuest(data: GuestCreateInput!): Guest!
  createOneMeal(data: MealCreateInput!): Meal!
  createOneUser(data: UserCreateInput!): User!
  deleteManyCoffee(where: CoffeeWhereInput): BatchPayload!
  deleteManyCoffeeMachine(where: CoffeeMachineWhereInput): BatchPayload!
  deleteManyCoffeeRating(where: CoffeeRatingWhereInput): BatchPayload!
  deleteManyCoffeeType(where: CoffeeTypeWhereInput): BatchPayload!
  deleteManyComment(where: CommentWhereInput): BatchPayload!
  deleteManyDish(where: DishWhereInput): BatchPayload!
  deleteManyDishComponent(where: DishComponentWhereInput): BatchPayload!
  deleteManyGuest(where: GuestWhereInput): BatchPayload!
  deleteManyMeal(where: MealWhereInput): BatchPayload!
  deleteManyUser(where: UserWhereInput): BatchPayload!
  deleteOneCoffee(where: CoffeeWhereUniqueInput!): Coffee
  deleteOneCoffeeMachine(where: CoffeeMachineWhereUniqueInput!): CoffeeMachine
  deleteOneCoffeeRating(where: CoffeeRatingWhereUniqueInput!): CoffeeRating
  deleteOneCoffeeType(where: CoffeeTypeWhereUniqueInput!): CoffeeType
  deleteOneComment(where: CommentWhereUniqueInput!): Comment
  deleteOneDish(where: DishWhereUniqueInput!): Dish
  deleteOneDishComponent(where: DishComponentWhereUniqueInput!): DishComponent
  deleteOneGuest(where: GuestWhereUniqueInput!): Guest
  deleteOneMeal(where: MealWhereUniqueInput!): Meal
  deleteOneUser(where: UserWhereUniqueInput!): User
  login(email: String!, password: String!): User
  logout: Boolean
  signup(email: String!, name: String, password: String!): User
  updateField(data: UpdateFieldInput!, id: String!, modelId: String!): Field!
  updateManyCoffee(data: CoffeeUpdateManyMutationInput!, where: CoffeeWhereInput): BatchPayload!
  updateManyCoffeeMachine(data: CoffeeMachineUpdateManyMutationInput!, where: CoffeeMachineWhereInput): BatchPayload!
  updateManyCoffeeRating(data: CoffeeRatingUpdateManyMutationInput!, where: CoffeeRatingWhereInput): BatchPayload!
  updateManyCoffeeType(data: CoffeeTypeUpdateManyMutationInput!, where: CoffeeTypeWhereInput): BatchPayload!
  updateManyComment(data: CommentUpdateManyMutationInput!, where: CommentWhereInput): BatchPayload!
  updateManyDish(data: DishUpdateManyMutationInput!, where: DishWhereInput): BatchPayload!
  updateManyDishComponent(data: DishComponentUpdateManyMutationInput!, where: DishComponentWhereInput): BatchPayload!
  updateManyGuest(data: GuestUpdateManyMutationInput!, where: GuestWhereInput): BatchPayload!
  updateManyMeal(data: MealUpdateManyMutationInput!, where: MealWhereInput): BatchPayload!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateModel(data: UpdateModelInput!, id: String!): Model!
  updateOneCoffee(data: CoffeeUpdateInput!, where: CoffeeWhereUniqueInput!): Coffee!
  updateOneCoffeeMachine(data: CoffeeMachineUpdateInput!, where: CoffeeMachineWhereUniqueInput!): CoffeeMachine!
  updateOneCoffeeRating(data: CoffeeRatingUpdateInput!, where: CoffeeRatingWhereUniqueInput!): CoffeeRating!
  updateOneCoffeeType(data: CoffeeTypeUpdateInput!, where: CoffeeTypeWhereUniqueInput!): CoffeeType!
  updateOneComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment!
  updateOneDish(data: DishUpdateInput!, where: DishWhereUniqueInput!): Dish!
  updateOneDishComponent(data: DishComponentUpdateInput!, where: DishComponentWhereUniqueInput!): DishComponent!
  updateOneGuest(data: GuestUpdateInput!, where: GuestWhereUniqueInput!): Guest!
  updateOneMeal(data: MealUpdateInput!, where: MealWhereUniqueInput!): Meal!
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  updatePassword(currentPassword: String!, password: String!): Boolean
  upsertOneCoffee(create: CoffeeCreateInput!, update: CoffeeUpdateInput!, where: CoffeeWhereUniqueInput!): Coffee!
  upsertOneCoffeeMachine(create: CoffeeMachineCreateInput!, update: CoffeeMachineUpdateInput!, where: CoffeeMachineWhereUniqueInput!): CoffeeMachine!
  upsertOneCoffeeRating(create: CoffeeRatingCreateInput!, update: CoffeeRatingUpdateInput!, where: CoffeeRatingWhereUniqueInput!): CoffeeRating!
  upsertOneCoffeeType(create: CoffeeTypeCreateInput!, update: CoffeeTypeUpdateInput!, where: CoffeeTypeWhereUniqueInput!): CoffeeType!
  upsertOneComment(create: CommentCreateInput!, update: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment!
  upsertOneDish(create: DishCreateInput!, update: DishUpdateInput!, where: DishWhereUniqueInput!): Dish!
  upsertOneDishComponent(create: DishComponentCreateInput!, update: DishComponentUpdateInput!, where: DishComponentWhereUniqueInput!): DishComponent!
  upsertOneGuest(create: GuestCreateInput!, update: GuestUpdateInput!, where: GuestWhereUniqueInput!): Guest!
  upsertOneMeal(create: MealCreateInput!, update: MealUpdateInput!, where: MealWhereUniqueInput!): Meal!
  upsertOneUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  aggregateCoffee(cursor: CoffeeWhereUniqueInput, orderBy: [CoffeeOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeWhereInput): AggregateCoffee
  aggregateCoffeeMachine(cursor: CoffeeMachineWhereUniqueInput, orderBy: [CoffeeMachineOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeMachineWhereInput): AggregateCoffeeMachine
  aggregateCoffeeRating(cursor: CoffeeRatingWhereUniqueInput, orderBy: [CoffeeRatingOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeRatingWhereInput): AggregateCoffeeRating
  aggregateCoffeeType(cursor: CoffeeTypeWhereUniqueInput, orderBy: [CoffeeTypeOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeTypeWhereInput): AggregateCoffeeType
  aggregateComment(cursor: CommentWhereUniqueInput, orderBy: [CommentOrderByWithRelationInput], skip: Int, take: Int, where: CommentWhereInput): AggregateComment
  aggregateDish(cursor: DishWhereUniqueInput, orderBy: [DishOrderByWithRelationInput], skip: Int, take: Int, where: DishWhereInput): AggregateDish
  aggregateDishComponent(cursor: DishComponentWhereUniqueInput, orderBy: [DishComponentOrderByWithRelationInput], skip: Int, take: Int, where: DishComponentWhereInput): AggregateDishComponent
  aggregateGuest(cursor: GuestWhereUniqueInput, orderBy: [GuestOrderByWithRelationInput], skip: Int, take: Int, where: GuestWhereInput): AggregateGuest
  aggregateMeal(cursor: MealWhereUniqueInput, orderBy: [MealOrderByWithRelationInput], skip: Int, take: Int, where: MealWhereInput): AggregateMeal
  aggregateUser(cursor: UserWhereUniqueInput, orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): AggregateUser
  findFirstCoffee(cursor: CoffeeWhereUniqueInput, distinct: [CoffeeScalarFieldEnum], orderBy: [CoffeeOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeWhereInput): Coffee
  findFirstCoffeeMachine(cursor: CoffeeMachineWhereUniqueInput, distinct: [CoffeeMachineScalarFieldEnum], orderBy: [CoffeeMachineOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeMachineWhereInput): CoffeeMachine
  findFirstCoffeeRating(cursor: CoffeeRatingWhereUniqueInput, distinct: [CoffeeRatingScalarFieldEnum], orderBy: [CoffeeRatingOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeRatingWhereInput): CoffeeRating
  findFirstCoffeeType(cursor: CoffeeTypeWhereUniqueInput, distinct: [CoffeeTypeScalarFieldEnum], orderBy: [CoffeeTypeOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeTypeWhereInput): CoffeeType
  findFirstComment(cursor: CommentWhereUniqueInput, distinct: [CommentScalarFieldEnum], orderBy: [CommentOrderByWithRelationInput], skip: Int, take: Int, where: CommentWhereInput): Comment
  findFirstDish(cursor: DishWhereUniqueInput, distinct: [DishScalarFieldEnum], orderBy: [DishOrderByWithRelationInput], skip: Int, take: Int, where: DishWhereInput): Dish
  findFirstDishComponent(cursor: DishComponentWhereUniqueInput, distinct: [DishComponentScalarFieldEnum], orderBy: [DishComponentOrderByWithRelationInput], skip: Int, take: Int, where: DishComponentWhereInput): DishComponent
  findFirstGuest(cursor: GuestWhereUniqueInput, distinct: [GuestScalarFieldEnum], orderBy: [GuestOrderByWithRelationInput], skip: Int, take: Int, where: GuestWhereInput): Guest
  findFirstMeal(cursor: MealWhereUniqueInput, distinct: [MealScalarFieldEnum], orderBy: [MealOrderByWithRelationInput], skip: Int, take: Int, where: MealWhereInput): Meal
  findFirstUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): User
  findManyCoffee(cursor: CoffeeWhereUniqueInput, distinct: [CoffeeScalarFieldEnum], orderBy: [CoffeeOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeWhereInput): [Coffee!]!
  findManyCoffeeCount(cursor: CoffeeWhereUniqueInput, distinct: [CoffeeScalarFieldEnum], orderBy: [CoffeeOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeWhereInput): Int!
  findManyCoffeeMachine(cursor: CoffeeMachineWhereUniqueInput, distinct: [CoffeeMachineScalarFieldEnum], orderBy: [CoffeeMachineOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeMachineWhereInput): [CoffeeMachine!]!
  findManyCoffeeMachineCount(cursor: CoffeeMachineWhereUniqueInput, distinct: [CoffeeMachineScalarFieldEnum], orderBy: [CoffeeMachineOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeMachineWhereInput): Int!
  findManyCoffeeRating(cursor: CoffeeRatingWhereUniqueInput, distinct: [CoffeeRatingScalarFieldEnum], orderBy: [CoffeeRatingOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeRatingWhereInput): [CoffeeRating!]!
  findManyCoffeeRatingCount(cursor: CoffeeRatingWhereUniqueInput, distinct: [CoffeeRatingScalarFieldEnum], orderBy: [CoffeeRatingOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeRatingWhereInput): Int!
  findManyCoffeeType(cursor: CoffeeTypeWhereUniqueInput, distinct: [CoffeeTypeScalarFieldEnum], orderBy: [CoffeeTypeOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeTypeWhereInput): [CoffeeType!]!
  findManyCoffeeTypeCount(cursor: CoffeeTypeWhereUniqueInput, distinct: [CoffeeTypeScalarFieldEnum], orderBy: [CoffeeTypeOrderByWithRelationInput], skip: Int, take: Int, where: CoffeeTypeWhereInput): Int!
  findManyComment(cursor: CommentWhereUniqueInput, distinct: [CommentScalarFieldEnum], orderBy: [CommentOrderByWithRelationInput], skip: Int, take: Int, where: CommentWhereInput): [Comment!]!
  findManyCommentCount(cursor: CommentWhereUniqueInput, distinct: [CommentScalarFieldEnum], orderBy: [CommentOrderByWithRelationInput], skip: Int, take: Int, where: CommentWhereInput): Int!
  findManyDish(cursor: DishWhereUniqueInput, distinct: [DishScalarFieldEnum], orderBy: [DishOrderByWithRelationInput], skip: Int, take: Int, where: DishWhereInput): [Dish!]!
  findManyDishComponent(cursor: DishComponentWhereUniqueInput, distinct: [DishComponentScalarFieldEnum], orderBy: [DishComponentOrderByWithRelationInput], skip: Int, take: Int, where: DishComponentWhereInput): [DishComponent!]!
  findManyDishComponentCount(cursor: DishComponentWhereUniqueInput, distinct: [DishComponentScalarFieldEnum], orderBy: [DishComponentOrderByWithRelationInput], skip: Int, take: Int, where: DishComponentWhereInput): Int!
  findManyDishCount(cursor: DishWhereUniqueInput, distinct: [DishScalarFieldEnum], orderBy: [DishOrderByWithRelationInput], skip: Int, take: Int, where: DishWhereInput): Int!
  findManyGuest(cursor: GuestWhereUniqueInput, distinct: [GuestScalarFieldEnum], orderBy: [GuestOrderByWithRelationInput], skip: Int, take: Int, where: GuestWhereInput): [Guest!]!
  findManyGuestCount(cursor: GuestWhereUniqueInput, distinct: [GuestScalarFieldEnum], orderBy: [GuestOrderByWithRelationInput], skip: Int, take: Int, where: GuestWhereInput): Int!
  findManyMeal(cursor: MealWhereUniqueInput, distinct: [MealScalarFieldEnum], orderBy: [MealOrderByWithRelationInput], skip: Int, take: Int, where: MealWhereInput): [Meal!]!
  findManyMealCount(cursor: MealWhereUniqueInput, distinct: [MealScalarFieldEnum], orderBy: [MealOrderByWithRelationInput], skip: Int, take: Int, where: MealWhereInput): Int!
  findManyUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): [User!]!
  findManyUserCount(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): Int!
  findUniqueCoffee(where: CoffeeWhereUniqueInput!): Coffee
  findUniqueCoffeeMachine(where: CoffeeMachineWhereUniqueInput!): CoffeeMachine
  findUniqueCoffeeRating(where: CoffeeRatingWhereUniqueInput!): CoffeeRating
  findUniqueCoffeeType(where: CoffeeTypeWhereUniqueInput!): CoffeeType
  findUniqueComment(where: CommentWhereUniqueInput!): Comment
  findUniqueDish(where: DishWhereUniqueInput!): Dish
  findUniqueDishComponent(where: DishComponentWhereUniqueInput!): DishComponent
  findUniqueGuest(where: GuestWhereUniqueInput!): Guest
  findUniqueMeal(where: MealWhereUniqueInput!): Meal
  findUniqueUser(where: UserWhereUniqueInput!): User
  getSchema: Schema!
  me: User
}

type Schema {
  enums: [Enum!]!
  models: [Model!]!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input UpdateFieldInput {
  create: Boolean
  editor: Boolean
  filter: Boolean
  id: String
  isId: Boolean
  kind: KindEnum
  list: Boolean
  name: String
  order: Int
  read: Boolean
  relationField: Boolean
  required: Boolean
  sort: Boolean
  title: String
  type: String
  unique: Boolean
  update: Boolean
  upload: Boolean
}

input UpdateModelInput {
  create: Boolean
  delete: Boolean
  displayFields: [String]
  fields: [UpdateFieldInput]
  idField: String
  name: String
  update: Boolean
}

type User {
  createdAt: DateTime!
  email: String!
  groupId: Int
  id: Int!
  name: String
  password: String!
}

type UserAvgAggregateOutputType {
  groupId: Float
  id: Float
}

input UserAvgOrderByAggregateInput {
  groupId: SortOrder
  id: SortOrder
}

type UserCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  email: Int!
  groupId: Int!
  id: Int!
  name: Int!
  password: Int!
}

input UserCountOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  groupId: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
}

input UserCreateInput {
  createdAt: DateTime
  email: String!
  groupId: Int
  name: String
  password: String!
}

type UserMaxAggregateOutputType {
  createdAt: DateTime
  email: String
  groupId: Int
  id: Int
  name: String
  password: String
}

input UserMaxOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  groupId: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
}

type UserMinAggregateOutputType {
  createdAt: DateTime
  email: String
  groupId: Int
  id: Int
  name: String
  password: String
}

input UserMinOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  groupId: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
}

input UserOrderByWithAggregationInput {
  _avg: UserAvgOrderByAggregateInput
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
  _sum: UserSumOrderByAggregateInput
  createdAt: SortOrder
  email: SortOrder
  groupId: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
}

input UserOrderByWithRelationInput {
  createdAt: SortOrder
  email: SortOrder
  groupId: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
}

enum UserScalarFieldEnum {
  createdAt
  email
  groupId
  id
  name
  password
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput]
  NOT: [UserScalarWhereWithAggregatesInput]
  OR: [UserScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  email: StringWithAggregatesFilter
  groupId: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  password: StringWithAggregatesFilter
}

type UserSumAggregateOutputType {
  groupId: Int
  id: Int
}

input UserSumOrderByAggregateInput {
  groupId: SortOrder
  id: SortOrder
}

input UserUncheckedCreateInput {
  createdAt: DateTime
  email: String!
  groupId: Int
  id: Int
  name: String
  password: String!
}

input UserUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  groupId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  groupId: NullableIntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input UserUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  groupId: NullableIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  groupId: NullableIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
}

input UserWhereInput {
  AND: [UserWhereInput]
  NOT: [UserWhereInput]
  OR: [UserWhereInput]
  createdAt: DateTimeFilter
  email: StringFilter
  groupId: IntNullableFilter
  id: IntFilter
  name: StringNullableFilter
  password: StringFilter
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
